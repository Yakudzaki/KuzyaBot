from aiogram import types
import logging
import globales
from loader import bot
from settings import *
from utils.db import *
from .owner_menu import dev_handler


async def owner_func(message: types.Message, mctp, mrm, chat):
    if mctp == True:
        stop = await dev_handler(message)
        if stop == True:
            return
    
    if message.from_user.id not in botovod_id:
        return
    
    if message.text.lower() == "—á–µ–ª–∏–Ω—Ñ–æ" and mctp == False and mrm == True:
        ment = await bot.get_chat_member(message.chat.id, message.reply_to_message.from_user.id,)
        await message.answer(f"{ment}")

#–º–µ—Å—Å–∞–¥–∂–∏–Ω—Ñ–æ
    if message.text.lower() == "–º–µ—Å—Å–∏–Ω—Ñ–æ" and mrm == True:
        from html import escape
        await message.answer(f"{escape(str(message.reply_to_message))}")
        # await message.answer(f"len(message.text)={len(message.reply_to_message.text)}")
        # await message.answer(f"len(html.escape(message.text))={len(html.escape(message.reply_to_message.text))}")

#–ß–ê–¢–ò–ù–§–û
    if message.text.lower() == "—á–∞—Ç–∏–Ω—Ñ–æ" and mctp == False:

        await message.answer(f"–ê–π–¥–∏ –≤–∞—à–µ–≥–æ —á–∞—Ç–∞: [{str(chat_id)}].\
        \n–®–∞–Ω—Å –∞–Ω—Ç–∏–º–∞—Ç–∞ - {str(chat[1])} –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤.\
        \n–ú—É—Ç –∞–Ω—Ç–∏–º–∞—Ç–∞ - {str(chat[2])} —Å–µ–∫—É–Ω–¥.\
        \n–†–µ–ø—É—Ç–∞—Ü–∏—è –∞–Ω—Ç–∏–º–∞—Ç–∞ - [{str(chat[7]).replace('1', '–í–∫–ª—é—á–µ–Ω–æ').replace('0', '–í—ã–∫–ª—é—á–µ–Ω–æ')}].\
        \n–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –ø—Ä–∏–∫–æ–ª–æ–≤ - [{str(chat[4]).replace('1', '–í–∫–ª—é—á–µ–Ω–æ').replace('0', '–í—ã–∫–ª—é—á–µ–Ω–æ')}].\
        \n–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å —â–∏—Ç–∞ - [{str(chat[13]).replace('1', '–í–∫–ª—é—á–µ–Ω–æ').replace('0', '–í—ã–∫–ª—é—á–µ–Ω–æ').replace('0', '–ê–Ω—Ç–∏–±–æ—Ç')}].\
        \n\n–¢–µ–∫—É—â–µ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ: \n{chat[5]}[–Ω–∏–∫–Ω–µ–π–º]{chat[6]}")
#–ë–ª–æ–∫–°—Ç–∏–∫
    if message.text.lower() == "–±–ª–æ–∫—Å—Ç–∏–∫" and mctp == False:
        from ..f_lib.other import restrict_chat
        await restrict_chat(message)

#–ü–û–ó–í–ê–¢–¨ –í–°–ï–•
    
    if mctp == False and message.text.lower().startswith("–≤–µ–ª–∏–∫–∏–π —Å–æ–∑—ã–≤"):
        from ..f_lib.other import call_everybody

        await call_everybody(message)

#–õ–ò–ß–ö–ê –° –ö–£–ó–ï–ô
    #–ü–†–û–í–ï–†–ò–¢–¨ –Æ–ó–ï–†–û–í –ù–ê –ü–†–ò–ù–ê–î–õ–ï–ñ–ù–û–°–¢–¨ –ß–ê–¢–ê–ú
    
    if mctp == True and message.text.lower() == '—á–µ–∫–Ω—É—Ç—å –º–µ–º–±–µ—Ä–æ–≤':
        from ..f_lib.other import check_all_members
        await check_all_members(message)

    #–ü–û–°–´–õ–ê–¢–¨ –°–û–û–ë–©–ï–ù–ò–Ø
    
    if mctp == True:
        global reply_transfer
        i = 0
        if reply_transfer == 0 and message.text.lower().startswith('https://t.me'):
            import re
            
            global message_transfer_id
            global text_name
            global text_id
            
            match = re.search(r'(?s:.*)/(\w+)', message.text)
            if match:
                message_transfer_id = match.group(1)
                reply_transfer = 1
                
                await message.reply(f"–ü–æ–ª—É—á–µ–Ω–æ ID —Å–æ–æ–±—â–µ–Ω–∏—è - [{message_transfer_id}]")
                text = message.text.replace(f"/{message_transfer_id}", "")
                if "https://t.me/c/" in text:
                    try:
                        text_id = int(text.replace("https://t.me/c/", "-100"))
                        await message.reply(f"–ü–æ–ª—É—á–µ–Ω–æ ID —á–∞—Ç–∞ - [{text_id}]")
                        reply_transfer = 1
                        return
                    except:
                        await message.reply(f"–°–ª—É—á–∏–ª–∞—Å—å —Ö—Ä–µ–Ω—å.")
                else:
                    if "https://t.me/" in text: 
                        text_name = text.replace("https://t.me/", "@")
                        await message.reply(f"–ü–æ–ª—É—á–µ–Ω–æ Username —á–∞—Ç–∞ - [{text_name}]")
                        reply_transfer = 1
                        return
            return

        

        if reply_transfer == 1 and message.text.lower().startswith(".—Å–µ–Ω–¥ "):
            if text_name != "":
                await bot.send_chat_action(text_name, types.ChatActions.TYPING)
                await bot.send_message(text_name, message.text.replace(".—Å–µ–Ω–¥ ", ""))
                await message.reply(f"–û–¢–ü–†–ê–í–õ–ï–ù–û –í {text_name}")
                reply_transfer = 0
                text_name = ""
                return
            if text_id != 0:
                await bot.send_chat_action(text_id, types.ChatActions.TYPING)
                await bot.send_message(text_id, message.text.replace(".—Å–µ–Ω–¥ ", ""))
                await message.reply(f'–û–¢–ü–†–ê–í–õ–ï–ù–û –í https://t.me/c/{str(text_id).replace("-100", "")}')
                reply_transfer = 0
                text_id = 0
                return
        
        if reply_transfer == 1 and message.text.lower() == "—Å—Ç–æ–ø":
            reply_transfer = 0 
            message_transfer_id = 0
            text_name = ""
            text_id = 0
            await message.reply(f"–°–±—Ä–æ—à–µ–Ω–æ –∞–π–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ —á–∞—Ç–∞.")
            return
        
        if reply_transfer == 1:
            try:
                if text_name != "":
                    await bot.send_chat_action(text_name, types.ChatActions.TYPING)
                    await bot.send_message(text_name, message.text, reply_to_message_id=message_transfer_id)
                    await message.reply(f"–û–¢–ü–†–ê–í–õ–ï–ù–û –í {text_name} –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ {message_transfer_id}")
                    reply_transfer = 0
                    text_name = ""
                    return
                if text_id != 0:
                    await bot.send_chat_action(text_id, types.ChatActions.TYPING)
                    await bot.send_message(text_id, message.text, reply_to_message_id=message_transfer_id)
                    await message.reply(f'–û–¢–ü–†–ê–í–õ–ï–ù–û –í https://t.me/c/{str(text_id).replace("-100", "")} –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ {message_transfer_id}')
                    reply_transfer = 0
                    text_id = 0
                    return
            except:
                reply_transfer = 0 
                message_transfer_id = 0
                text_name = ""
                text_id = 0
                await message.reply(f"–°–±—Ä–æ—à–µ–Ω–æ –∞–π–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ —á–∞—Ç–∞. –ò–±–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ —á–∞—Ç–µ.")


    #–ß–ò–°–¢–ö–ê –ë–ê–ó–´
        
        if message.text.lower() == '—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã':
            from ..f_lib.other import clean_db_users
            await clean_db_users(message)

    if message.text.lower() == "!terminate" and message.from_user.id == yakudza_id:
        await message.reply("‚å®Ô∏è –°–∏—Å—Ç–µ–º–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ -f to force kill\n–ö–æ–¥ –≤—ã—Ö–æ–¥–∞  0\nüìº –í—ã–≤–æ–¥: process is killed ")