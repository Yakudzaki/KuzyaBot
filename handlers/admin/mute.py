from loader import dp, bot
from aiogram import types
from aiogram.dispatcher.filters import AdminFilter, IsReplyFilter
from aiogram.types import ChatMemberAdministrator, ChatMemberOwner, ChatPermissions, Message
import datetime
import time
import html
from utils.db.db_utils_—Åhats import *
from utils.db.db_utils_warning import *
from utils.db.db_utils_users import *
from ..f_lib.other import message_user_get_ban
from settings import *


#–ó–∞–º—É—Ç–∏—Ç—å —é–∑–µ—Ä–∞
@dp.message_handler(commands=['–º—É—Ç', 'mute'], commands_prefix='!?./', is_chat_admin=True)
async def mute(message: types.Message):

    admins = await message.chat.get_administrators()
    
    restr = False
    for admin in admins:
        if admin.user.id == message.from_user.id:
            if admin.can_restrict_members == True:
                restr = True
                break
            else:
                break
        else:
            continue
    if restr == False:
        await message.reply("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!")
        return
    
    muted = await message_user_get_ban(message)
    
    if muted ==  None:
        await message.reply("–¶–µ–ª—å –∑–∞–º—É—á–∏–≤–∞–Ω–∏—è –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞!")
        return
    
    text_l = message.text
    for entity in message.entities:
        text_l = text_l[:entity.offset] + text_l[entity.offset + entity.length:]
        break
    
    if len(text_l.split()) == 1:
        nick = html.escape(message.from_user.first_name)
        nick2 = html.escape(muted[2])
        await bot.restrict_chat_member(message.chat.id, muted[0], ChatPermissions(False))
        await message.reply(f'üë§| –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <a href="tg://user?id={message.from_user.id}">{nick}</a>\nüîá| –ó–∞–º—É—Ç–∏–ª: <a href="tg://user?id={muted[0]}">{nick2}</a>\n‚è∞| –°—Ä–æ–∫: –ù–∞–≤—Å–µ–≥–¥–∞')
        return
    
    try:
        muteint = int(message.text.split()[1])
        mutetype = message.text.split()[2]
        comment = " ".join(text_l.split()[3:])
    except:
        try:
        
            mute = message.text.split()[1]
            
            muteint = mute.split("—á")[0]
            muteint = muteint.split("–¥")[0]
            muteint = muteint.split("–º")[0]
            muteint = muteint.split("c")[0]
            
            muteint = muteint.split("h")[0]
            muteint = muteint.split("d")[0]
            muteint = muteint.split("m")[0]
            muteint = muteint.split("s")[0]
            
            mutetype = mute.replace(f"{muteint}", "")
            muteint = int(muteint)
            
            comment = " ".join(text_l.split()[2:])
    
        except:
            muteint = 0
            comment = " ".join(text_l.split()[1:])

    try:
        nick = html.escape(message.from_user.first_name)
        nick2 = html.escape(muted[2])
        comment = html.escape(comment)
        
        if muteint <= 0:
            await bot.restrict_chat_member(message.chat.id, muted[0], ChatPermissions(False))
            mut_type = '–ù–∞–≤—Å–µ–≥–¥–∞'
            
            if not mutetype.lower().startswith('—á') and not mutetype.lower().startswith('h') and not mutetype.lower().startswith('–º') and not mutetype.lower().startswith('m') and not mutetype.lower().startswith('–¥') and not mutetype.lower().startswith('d'):
                    comment = " ".join(text_l.split()[1:])
                    comment = html.escape(comment)

        elif mutetype.lower().startswith('—á') or mutetype.lower().startswith('h'):
            await bot.restrict_chat_member(message.chat.id, muted[0], ChatPermissions(False), until_date=datetime.timedelta(hours=muteint))
            mut_type = f'{muteint} —á.'

        elif mutetype.lower().startswith('–º') or mutetype.lower().startswith('m'):
            await bot.restrict_chat_member(message.chat.id, muted[0], ChatPermissions(False), until_date=datetime.timedelta(minutes=muteint))
            mut_type = f'{muteint} –º.'

        elif mutetype.lower().startswith('–¥') or mutetype.lower().startswith('d'):
            await bot.restrict_chat_member(message.chat.id, muted[0], ChatPermissions(False), until_date=datetime.timedelta(days=muteint))
            mut_type = f'{muteint} –¥.'
       
        elif mutetype.lower().startswith('—Å') or mutetype.lower().startswith('s'):
            if muteint >= 60:
                await bot.restrict_chat_member(message.chat.id, muted[0], ChatPermissions(False), until_date=int(time.time() + muteint))
                mut_type = f'{muteint} c–µ–∫.'
            else:
                await message.reply('–í—ã—Å–æ–∫–∞—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –≤–µ—á–Ω–æ–≥–æ –º—É—Ç–∞!')
                return
        else:
            await bot.restrict_chat_member(message.chat.id, muted[0], ChatPermissions(False))
            comment = " ".join(text_l.split()[1:])
            comment = html.escape(comment)
            mut_type = '–ù–∞–≤—Å–µ–≥–¥–∞'
            
        if comment != "":
            await message.reply(f'üë§| –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <a href="tg://user?id={message.from_user.id}">{nick}</a>\nüîá| –ó–∞–º—É—Ç–∏–ª: <a href="tg://user?id={muted[0]}">{nick2}</a>\n‚è∞| –°—Ä–æ–∫: {mut_type}\nüìÉ| –ü—Ä–∏—á–∏–Ω–∞: {comment}')
        else:
            await message.reply(f'üë§| –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <a href="tg://user?id={message.from_user.id}">{nick}</a>\nüîá| –ó–∞–º—É—Ç–∏–ª: <a href="tg://user?id={muted[0]}">{nick2}</a>\n‚è∞| –°—Ä–æ–∫: {mut_type}')
    except:
        await message.reply('–ù–µ –ª—É—á—à–∞—è –∏–¥–µ—è...')

#–†–∞–∑–º—É—Ç–∏—Ç—å —é–∑–µ—Ä–∞
@dp.message_handler(commands=['—Ä–∞–∑–º—É—Ç', 'unmute', '–∞–Ω–º—É—Ç'], commands_prefix='!?./', is_chat_admin=True)
async def unmute(message: types.Message):
   
    admins = await message.chat.get_administrators()
    
    restr = False
    for admin in admins:
        if admin.user.id == message.from_user.id:
            if admin.can_restrict_members == True:
                restr = True
                break
            else:
                break
        else:
            continue
    if restr == False:
        await message.reply("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!")
        return
    
    muted = await message_user_get_ban(message)
    
    if muted == None:
        await message.reply("–¶–µ–ª—å —Ä–∞–∑–º—É—á–∏–≤–∞–Ω–∏—è –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞!")
        return
    
    await bot.restrict_chat_member(message.chat.id, muted[0], ChatPermissions(True, True, True, True, True, True, True, True, True, True, True, True, True, True, True))
    nick = html.escape(message.from_user.first_name)
    nick2 = html.escape(muted[2])
    await message.reply(f'üë§| –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <a href="tg://user?id={message.from_user.id}">{nick}</a>\nüîä| –†–∞–∑–º—É—Ç–∏–ª: <a href="tg://user?id={muted[0]}">{nick2}</a>')



#–ê–Ω—Ç–∏–º–∞—Ç –¥–ª—è —é–∑–µ—Ä–∞
@dp.message_handler(commands=['–∞–Ω—Ç–∏–º–∞—Ç'], commands_prefix='+')
async def mute(message: types.Message):
    
    if not message.reply_to_message:

        create_user(message.chat.id, message.from_user.username, message.from_user.first_name)
        create_warner(message.chat.id, message.reply_to_message.from_user.id)

        warner = get_warner(message.chat.id, message.from_user.id)
        await message.reply(f"–í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —à–∞–Ωc –∞–Ω—Ç–∏–º–∞—Ç–∞ —Ä–∞–≤–µ–Ω: [{warner[3]}]")
        return

                                   

    create_user(message.reply_to_message.id, message.reply_to_message.from_user.username, message.reply_to_message.from_user.first_name)
    create_warner(message.chat.id, message.reply_to_message.from_user.id)

    admins = await message.chat.get_administrators()
    restr = False
    for admin in admins:
        if admin.user.id == message.from_user.id:
            if admin.can_restrict_members == True:
                restr = True
                break
            else:
                break
        else:
            continue
    if restr == False:
        await message.reply("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!")
        return
    
    command = message.text.lower().split()[0]
    matex_status = message.text.lower().replace(f'{command} ', "")
    if matex_status == command:
        await message.reply("–£–∫–∞–∂–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ —à–∞–Ω—Å–∞!")
        return
    try:
        if int(matex_status) >= 0:
            set_matex_status(message.chat.id, message.reply_to_message.from_user.id, int(matex_status))
            id = message.reply_to_message.message_id
            msg = f"–í–∞—à —à–∞–Ω—Å –∞–Ω—Ç–∏–º–∞—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ {matex_status}!"
            await bot.send_message(message.chat.id, msg, reply_to_message_id=id)
        else:
            await message.reply("–®–∞–Ω—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º!")
    except:
        matex_status = len(matex_status)
        set_matex_status(message.chat.id, message.reply_to_message.from_user.id, matex_status)
        id = message.reply_to_message.message_id
        msg = f"–í–∞—à —à–∞–Ω—Å –∞–Ω—Ç–∏–º–∞—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ {matex_status}!"
        await bot.send_message(message.chat.id, msg, reply_to_message_id=id)