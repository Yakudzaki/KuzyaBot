from loader import dp, bot
from aiogram import types
from aiogram.dispatcher.filters import CommandHelp, Text
from loguru import logger
from keyboards.inline.help_kb import buttons
from utils.db.db_utils_users import *
from utils.db.db_utils_warning import *
from settings import legal_chats, topa_chat_invite, yakudza_url
from app import server_dir

    
@dp.message_handler(commands=['—Ö–µ–ª–ø', '–∫–æ–º–∞–Ω–¥—ã', '–ø–æ–º–æ—â—å', 'help'], commands_prefix='!?./')
async def help_handler(message: types.Message):
    if message.chat.type != 'private':
        warner = get_warner(message.chat.id, message.from_user.id)
        if warner == None:
            warner = [message.chat.id, message.from_user.id, 0, 0, 0]
        if warner[4] != 0:
            return
    
    if message.chat.id not in legal_chats and message.chat.type != 'private':
        await message.answer(f"‚ùå –Ø —Å–æ–∑–¥–∞–Ω –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –¥–ª—è —á–∞—Ç–∞ <a href='{topa_chat_invite}'>–û–ø–∞ –≠—Ç–æ –¢–æ–ø–∞</a>!", parse_mode="html", disable_web_page_preview=True)
        await message.answer(f"–ê–π–¥–∏ –≤–∞—à–µ–≥–æ —á–∞—Ç–∞: [{str(message.chat.id)}]\n–î–æ–≥–æ–≤–∞—Ä–∏–≤–∞–π—Ç–µ—Å—å —Å <a href='{yakudza_url}'>—Å–æ–∑–¥–∞—Ç–µ–ª–µ–º</a> –±–æ—Ç–∞.", parse_mode="html", disable_web_page_preview=True)

        if check_chat(message.chat.id):
            create_chat_with_info(message.chat.id, f"–ù–ï–õ–ï–ì–ê–õ: {message.chat.title}, @{message.chat.username}, {message.chat.first_name}, {message.chat.last_name}")
            chat = get_chat(chats)
        await bot.leave_chat(message.chat.id)
        return
        
    
    user = message.from_user
    create_user(user.id, user.username, user.first_name)
    await message.answer("<b>üìö –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:</b>", reply_markup=buttons)
    
@dp.message_handler(lambda message: message.text.lower() == "–∞–Ω—Ç–∏–º–∞—Ç")
async def rp_spis(message: types.Message):
    nick = html.escape(message.from_user.first_name)
    await message.reply(f"<a href='tg://user?id={message.from_user.id}'>{nick}</a>, –≤–æ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ —Å–∏—Å—Ç–µ–º—ã –∞–Ω—Ç–∏–º–∞—Ç–∞:\n\
                           \nüîí <code>+–ê–Ω—Ç–∏–º–∞—Ç</code> (0-100) ‚Äî –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —à–∞–Ω—Å –∞–Ω—Ç–∏–º–∞—Ç–∞ –ø—Ä–µ—Å–æ–Ω–∞–ª—å–Ω–æ –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–∞ —á–∞—Ç–∞. –ú—É—Ç –∏ –ø—Ä–æ—á–µ–µ –±—É–¥—É—Ç, –∫–∞–∫ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —á–∞—Ç–∞\
                           \nüîí <code>!–ú—É—Ç–º–∞—Ç (—Å–µ–∫—É–Ω–¥—ã)</code> ‚Äî –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º—É—Ç –∞–Ω—Ç–∏–º–∞—Ç–∞. (–ï—Å–ª–∏ –º–µ–Ω—å—à–µ 60, —Ç–æ –º—É—Ç –æ—Ç–∫–ª—é—á–∞–µ—Ç—Å—è)\
                           \nüîí <code>!–®–∞–Ω—Å–º–∞—Ç (–ø—Ä–æ—Ü–µ–Ω—Ç—ã)</code> ‚Äî –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —à–∞–Ω—Å –∞–Ω—Ç–∏–º–∞—Ç–∞. (–æ—Ç 0 –¥–æ 100)\
                           \nüîí <code>!–†–µ–ø–º–∞—Ç</code> (0,1) ‚Äî –í–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –≤—ã–∫–ª—é—á–∏—Ç—å –ø–∞–¥–µ–Ω–∏–µ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ –æ—Ç –º–∞—Ç–∞. (0 - –≤—ã–∫–ª. 1 - –≤–∫–ª.)\
                           \n\nüëå <code>!–ê–Ω—Ç–∏–º–∞—Ç</code> ‚Äî –£–∑–Ω–∞—Ç—å —Ç–µ–∫—É—â–∏–µ —à–∞–Ω—Å –∏ –º—É—Ç –∞–Ω—Ç–∏–º–∞—Ç–∞.", parse_mode="html")
                           
@dp.message_handler(lambda message: message.text.lower() == "—Å–ø–∞–º–ª–∏–º")
async def rp_spis(message: types.Message):
    nick = html.escape(message.from_user.first_name)
    await message.reply(f"<a href='tg://user?id={message.from_user.id}'>{nick}</a>, –≤–æ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ —Å–∏—Å—Ç–µ–º—ã –∞–Ω—Ç–∏—Å–ø–∞–º–∞:\n\
                           \n–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –≤ —á–∞—Ç–µ –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–¥—Ä—è–¥, –∑–∞ –∫–æ—Ä–æ—Ç–∫–æ–µ –≤—Ä–µ–º—è, –æ—Ç –æ–¥–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞:\
                           \nüîí <code>!—Ñ–æ—Ç–æ–ª–∏–º–∏—Ç</code> (—á–∏—Å–ª–æ) ‚Äî –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.\
                           \nüîí <code>!–≤–∏–¥–µ–æ–ª–∏–º–∏—Ç</code> (—á–∏—Å–ª–æ) ‚Äî –¥–ª—è –≤–∏–¥–µ–æ.\
                           \nüîí <code>!—Å—Ç–∏–∫–ª–∏–º–∏—Ç</code> (—á–∏—Å–ª–æ) ‚Äî –¥–ª—è —Å—Ç–∏–∫–µ—Ä–æ–≤.\
                           \nüîí <code>!–≥–∏—Ñ–ª–∏–º–∏—Ç</code> (—á–∏—Å–ª–æ) ‚Äî –¥–ª—è GIF.\
                           \nüîí <code>!—Ç–µ–∫—Å—Ç–ª–∏–º–∏—Ç</code> (—á–∏—Å–ª–æ) ‚Äî –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.\
                           \n\nüëå <code>!—Å–ø–∞–º–ª–∏–º–∏—Ç—ã</code> ‚Äî –£–∑–Ω–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–Ω—Ç–∏—Å–ø–∞–º–∞", parse_mode="html")
                           
@dp.message_handler(lambda message: message.text.lower() == "–ø–∞–¥–µ–∂–∏")
async def padeghes(message: types.Message):
    await bot.send_chat_action(message.chat.id, types.ChatActions.UPLOAD_PHOTO)
    
    await bot.send_photo(message.chat.id, open(server_dir + f"/data/padegh.jpg", "rb"), reply_to_message_id=message.message_id)
    
@dp.message_handler(lambda message: message.text.lower() == "–∑–∞–ø–æ–≤–µ–¥–∏ –∞–¥–º–∏–Ω–∞")
async def padeghes(message: types.Message):
    await bot.send_chat_action(message.chat.id, types.ChatActions.UPLOAD_PHOTO)
    
    await bot.send_photo(message.chat.id, open(server_dir + f"/data/odmen.jpg", "rb"), reply_to_message_id=message.message_id)