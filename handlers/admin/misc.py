from loader import dp, bot
from aiogram import types
from utils.db.db_utils_users import *
from utils.db.db_utils_—Åhats import *
from utils.db.relations.db_utils_moniker import *
from settings import *
from ..lib.other import message_user_get
import html

@dp.message_handler(commands=["–ø—Ä–∞–≤–∏–ª–∞", "rules"], commands_prefix="+", is_chat_admin=True)
async def rules_handler(message: types.Message):
    users = message.from_user
    create_user(users.id, users.username, users.first_name)
    rules = message.text.replace("+–ø—Ä–∞–≤–∏–ª–∞ ", "").replace("+–ü—Ä–∞–≤–∏–ª–∞ ", "").replace("+rules ", "").replace("+Rules ", "")
    rules = rules.replace("+–ø—Ä–∞–≤–∏–ª–∞", "").replace("+–ü—Ä–∞–≤–∏–ª–∞", "").replace("+rules", "").replace("+Rules", "")

    if "://" in rules or rules == "":
        chat = message.chat.id
        set_rules(chat, rules)
        await message.reply("<b>‚úÖ –ü—Ä–∞–≤–∏–ª–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω—ã!</b>")
        return
    else:
        await message.reply("<b>‚ùå –ü—Ä–∞–≤–∏–ª–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å—Å—ã–ª–∫–æ–π!</b>")
        await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)



#–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —à–∞–Ω—Å –∞–Ω—Ç–∏–º–∞—Ç–∞
@dp.message_handler(commands=["—à–∞–Ω—Å–º–∞—Ç"], commands_prefix="/!.", is_chat_admin=True)
async def vermat_handler(message: types.Message):
    if message.chat.type == 'private':
        return
    if check_chat(message.chat.id):
            create_chat(message.chat.id)

    vermat = message.text.replace("!—à–∞–Ω—Å–º–∞—Ç ", "").replace("/—à–∞–Ω—Å–º–∞—Ç ", "").replace(".—à–∞–Ω—Å–º–∞—Ç ", "").replace("!–®–∞–Ω—Å–º–∞—Ç ", "").replace("/–®–∞–Ω—Å–º–∞—Ç ", "").replace(".–®–∞–Ω—Å–º–∞—Ç ", "")
    raises = ["!—à–∞–Ω—Å–º–∞—Ç", "/—à–∞–Ω—Å–º–∞—Ç", ".—à–∞–Ω—Å–º–∞—Ç", "!–®–∞–Ω—Å–º–∞—Ç", "/–®–∞–Ω—Å–º–∞—Ç", ".–®–∞–Ω—Å–º–∞—Ç", ""]
    if vermat in raises:
        await message.reply("<b>‚ùå –£–∫–∞–∂–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ!</b>")
        return
    if int(vermat) > 100:
        await message.reply("<b>‚ùå –£–∫–∞–∂–∏—Ç–µ –≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ!</b>\n –û—Ç –Ω—É–ª—è –¥–æ —Å—Ç–∞.")
        return
    if int(vermat) < 0:
        await message.reply("<b>‚ùå –£–∫–∞–∂–∏—Ç–µ –≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ!</b>\n –û—Ç –Ω—É–ª—è –¥–æ —Å—Ç–∞.")
        return
    else:
        chats = message.chat.id
        set_vermat(chats, vermat)
        await message.reply("<b> ‚úÖ –®–∞–Ω—Å –∞–Ω—Ç–∏–º–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω!</b>")


#–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º—É—Ç –∞–Ω—Ç–∏–º–∞—Ç–∞
@dp.message_handler(commands=["–º—É—Ç–º–∞—Ç"], commands_prefix="/!.", is_chat_admin=True)
async def secmat_handler(message: types.Message):
    if message.chat.type == 'private':
        return
    if check_chat(message.chat.id):
            create_chat(message.chat.id)

    secmat = message.text.replace("!–º—É—Ç–º–∞—Ç ", "").replace("/–º—É—Ç–º–∞—Ç ", "").replace(".–º—É—Ç–º–∞—Ç ", "").replace("!–ú—É—Ç–º–∞—Ç ", "").replace("/–ú—É—Ç–º–∞—Ç ", "").replace(".–ú—É—Ç–º–∞—Ç ", "")
    raises = ["!–º—É—Ç–º–∞—Ç", "/–º—É—Ç–º–∞—Ç", ".–º—É—Ç–º–∞—Ç", "!–ú—É—Ç–º–∞—Ç", "/–ú—É—Ç–º–∞—Ç", ".–ú—É—Ç–º–∞—Ç", ""]
    if secmat in raises:
        await message.reply("<b>‚ùå –£–∫–∞–∂–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö!</b>")
        return
    if int(secmat) < 0:
        await message.reply("<b>‚ùå –£–∫–∞–∂–∏—Ç–µ –≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ!</b>\n–û—Ç –Ω—É–ª—è —Å–µ–∫—É–Ω–¥ –¥–æ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏.")
        return
    else:
        chats = message.chat.id
        set_secmat(chats, secmat)
        await message.reply("<b> ‚úÖ –ú—É—Ç –∞–Ω—Ç–∏–º–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω!</b>")


#–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–µ–ø—É—Ç–∞—Ü–∏—é –æ—Ç –∞–Ω—Ç–∏–º–∞—Ç–∞
@dp.message_handler(commands=["—Ä–µ–ø–º–∞—Ç"], commands_prefix="/!.", is_chat_admin=True)
async def secmat_handler(message: types.Message):
    if message.chat.type == 'private':
        return
    if check_chat(message.chat.id):
            create_chat(message.chat.id)
            
    repmat = message.text.replace("!—Ä–µ–ø–º–∞—Ç ", "").replace("/—Ä–µ–ø–º–∞—Ç ", "").replace(".—Ä–µ–ø–º–∞—Ç ", "").replace("!–†–µ–ø–º–∞—Ç ", "").replace("/–†–µ–ø–º–∞—Ç ", "").replace(".–†–µ–ø–º–∞—Ç ", "")
    raises = ["!—Ä–µ–ø–º–∞—Ç", "/—Ä–µ–ø–º–∞—Ç", ".—Ä–µ–ø–º–∞—Ç", "!–†–µ–ø–º–∞—Ç", "/–†–µ–ø–º–∞—Ç", ".–†–µ–ø–º–∞—Ç", ""]
    if repmat in raises:
        await message.reply("<b>‚ùå –£–∫–∞–∂–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ, 0(–≤—ã–∫–ª) –∏–ª–∏ 1(–≤–∫–ª)!</b>")
        return
    if int(repmat) != 0 and int(repmat) != 1:
        await message.reply("<b>‚ùå –£–∫–∞–∂–∏—Ç–µ –≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ!</b>\n0 - –≤—ã–∫–ª—é—á–∏—Ç—å, –∏ 1 - –≤–∫–ª—é—á–∏—Ç—å!")
        return
    else:
        chats = message.chat.id
        set_matrep(chats, repmat)
        await message.reply("<b> ‚úÖ –ü–∞–¥–µ–Ω–∏–µ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ –æ—Ç –∞–Ω—Ç–∏–º–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!</b>")


#–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—ã–∫–ª—é—á–∞—Ç–µ–ª—å —Ä–∞–∑–≤–ª–µ–∫—É—Ö
@dp.message_handler(commands=["–∏–≥—Ä—ã"], commands_prefix="/!.")
async def secmat_handler(message: types.Message):
    if message.chat.type == 'private':
        return
    chats = message.chat.id
    chat = get_chat(chats)
    if check_chat(message.chat.id):
            create_chat(message.chat.id)
            chat = get_chat(chats)
            
    funny_func = message.text.replace("!–∏–≥—Ä—ã ", "").replace("/–∏–≥—Ä—ã ", "").replace(".–∏–≥—Ä—ã ", "").replace("!–ò–≥—Ä—ã ", "").replace("/–ò–≥—Ä—ã ", "").replace(".–ò–≥—Ä—ã ", "")
    raises = [".–ò–≥—Ä—ã", "/–ò–≥—Ä—ã", "!–ò–≥—Ä—ã", ".–∏–≥—Ä—ã", "/–∏–≥—Ä—ã", "!–∏–≥—Ä—ã", ""]
    if funny_func in raises:
        await message.reply(f"üé∞ –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –ø—Ä–∏–∫–æ–ª–æ–≤ - [{str(chat[4]).replace('1', '–í–∫–ª—é—á–µ–Ω–æ').replace('0', '–í—ã–∫–ª—é—á–µ–Ω–æ')}].\
        \n –ê–¥–º–∏–Ω—ã –º–æ–≥—É—Ç –≤–≤–µ—Å—Ç–∏ <code>!–∏–≥—Ä—ã 1</code> —á—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å, –∏–ª–∏ <code>!–∏–≥—Ä—ã 0</code> —á—Ç–æ–±—ã –≤—ã–∫–ª—é—á–∏—Ç—å –∏–≥—Ä—ã —Å –ö—É–∑–µ–π.")
        return
    else:
        us = message.from_user
        adminse = await message.chat.get_administrators()
        admino = 0
        for admin in adminse:
            if admin.user.id == us.id or us.id == 1087968824:
                admino = 1
                continue
        if admino == 0:
            return
        else:
            try:
                chats = message.chat.id
                set_funny_func(chats, int(funny_func))
                if int(funny_func) == 0:
                    await message.reply("<b> ‚ùå –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω—ã!</b>")
                    return
                if int(funny_func) == 1:
                    await message.reply("<b> ‚úÖ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω—ã!</b>")
                    return

                else:
                    await message.reply("<b> ‚ùå –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!\n–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ! \n<code>!–∏–≥—Ä—ã 0</code>  ‚Äî –≤—ã–∫–ª. –∏–≥—Ä—ã <code>!–∏–≥—Ä—ã 1</code> ‚Äî –≤–∫–ª. –∏–≥—Ä—ã.</b>")
                    return
            except:
                await message.reply("<b> ‚ùå –ß—Ç–æ-—Ç–æ —Å–µ—Ä—å—ë–∑–Ω–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!</b>")
                return


#–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –©–ò–¢!!!!!

@dp.message_handler(commands=["—â–∏—Ç"], commands_prefix="/!.")
async def secmat_handler(message: types.Message):
    if message.chat.type == 'private':
        return
    chats = message.chat.id
    chat = get_chat(chats)
    if check_chat(message.chat.id):
            create_chat(message.chat.id)
            chat = get_chat(chats)
            
    stat0 = "–©–∏—Ç –≤—ã–∫–ª—é—á–µ–Ω!"
    stat1 = "–í–∫–ª—é—á–µ–Ω–∞ –∞–Ω—Ç–∏—Ä–µ–∫–ª–∞–º–∞!"
    stat2 = "–í–∫–ª—é—á–µ–Ω—ã –∞–Ω—Ç–∏—Ä–µ–∫–ª–∞–º–∞ –∏ –∞–Ω—Ç–∏–±–æ—Ç!"
    
    us = message.from_user
    
    adminse = await message.chat.get_administrators()
    admino = 0
    
    for admin in adminse:
        if admin.user.id == us.id or us.id == 1087968824:
            admino = 1
            continue
    
    if admino == 0:
        await message.reply(f'üõ° –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å —â–∏—Ç–∞ - [{str(chat[13]).replace("0", stat0).replace("1", stat1).replace("2", stat2)}]')
    
    if admino == 1:
        if chat[13] == 0:
            set_shield(message.chat.id, 1)
        if chat[13] == 1:
            set_shield(message.chat.id, 2)
        if chat[13] == 2:
            set_shield(message.chat.id, 0)
        
        chat = get_chat(chats)
        await message.reply(f'üõ° –°—Ç–∞—Ç—É—Å —â–∏—Ç–∞ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞: [{str(chat[13]).replace("0", stat0).replace("1", stat1).replace("2", stat2)}]')

#–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–≤–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
@dp.message_handler(commands=["setwelcome1"], commands_prefix="!/.", is_chat_admin=True)
async def welcome1_handler(message: types.Message):
    if message.chat.type == 'private':
        return
    if check_chat(message.chat.id):
            create_chat(message.chat.id)
            
    welcome1 = message.text.replace("!setwelcome1 ", "").replace("/setwelcome1 ", "").replace(".setwelcome1 ", "").replace("!Setwelcome1 ", "").replace("/Setwelcome1 ", "").replace(".Setwelcome1 ", "").replace("!setwelcome1", "").replace("/setwelcome1", "").replace(".setwelcome1", "").replace("!Setwelcome1", "").replace("/Setwelcome1", "").replace(".Setwelcome1", "").replace("_", " ")
    if len(welcome1) > 150:
        await message.reply("<b>‚ùå –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ(1) –Ω–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –±–æ–ª—å—à–µ 150 —Å–∏–º–≤–æ–ª–æ–≤!</b>")
        return
    elif "https://" in welcome1:
        await message.reply("<b>‚ùå –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ(1) –Ω–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å—Å—ã–ª–æ–∫!</b>")
        await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
        return
    else:
        chats = message.chat.id
        set_welcome1(chats, welcome1)
        await message.reply("<b>‚úÖ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ(1) —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!</b>")
        return


#–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Ç–æ—Ä–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
@dp.message_handler(commands=["setwelcome2"], commands_prefix="!/.", is_chat_admin=True)
async def welcome2_handler(message: types.Message):
    if message.chat.type == 'private':
        return
    if check_chat(message.chat.id):
            create_chat(message.chat.id)
            
    welcome2 = message.text.replace("!setwelcome2 ", "").replace("/setwelcome2 ", "").replace(".setwelcome2 ", "").replace("!Setwelcome2 ", "").replace("/Setwelcome2 ", "").replace(".Setwelcome2 ", "").replace("!setwelcome2", "").replace("/setwelcome2", "").replace(".setwelcome2", "").replace("!Setwelcome2", "").replace("/Setwelcome2", "").replace(".Setwelcome2", "").replace("_", " ")
    if len(welcome2) > 150:
        await message.reply("<b>‚ùå –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ(2) –Ω–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –±–æ–ª—å—à–µ 150 —Å–∏–º–≤–æ–ª–æ–≤!</b>")
        return
    elif "https://" in welcome2:
        await message.reply("<b>‚ùå –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ(2) –Ω–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å—Å—ã–ª–æ–∫!</b>")
        await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
        return
    else:
        chats = message.chat.id
        set_welcome2(chats, welcome2)
        await message.reply("<b>‚úÖ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ(2) —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!</b>")
        return


#–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–ø–∞–º-–ª–∏–º–∏—Ç –Ω–∞ —Ñ–æ—Ç–æ
@dp.message_handler(commands=["—Ñ–æ—Ç–æ–ª–∏–º–∏—Ç"], commands_prefix="/!.", is_chat_admin=True)
async def photo_limit_handler(message: types.Message):
    if message.chat.type == 'private':
        return
    if check_chat(message.chat.id):
            create_chat(message.chat.id)
            
    photo_limit = message.text.replace("!—Ñ–æ—Ç–æ–ª–∏–º–∏—Ç ", "").replace("/—Ñ–æ—Ç–æ–ª–∏–º–∏—Ç ", "").replace(".—Ñ–æ—Ç–æ–ª–∏–º–∏—Ç ", "").replace("!–§–æ—Ç–æ–ª–∏–º–∏—Ç ", "").replace("/–§–æ—Ç–æ–ª–∏–º–∏—Ç ", "").replace(".–§–æ—Ç–æ–ª–∏–º–∏—Ç ", "")
    raises = ["!—Ñ–æ—Ç–æ–ª–∏–º–∏—Ç", "/—Ñ–æ—Ç–æ–ª–∏–º–∏—Ç", ".—Ñ–æ—Ç–æ–ª–∏–º–∏—Ç", "!–§–æ—Ç–æ–ª–∏–º–∏—Ç", "/–§–æ—Ç–æ–ª–∏–º–∏—Ç", ".–§–æ—Ç–æ–ª–∏–º–∏—Ç", ""]
    if photo_limit in raises:
        await message.reply("<b>‚ùå –£–∫–∞–∂–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ!</b>")
        return
    if int(photo_limit) < 0:
        await message.reply("<b>‚ùå –£–∫–∞–∂–∏—Ç–µ –≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ!</b>\n –û—Ç –Ω—É–ª—è –¥–æ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏.")
        return
    else:
        chats = message.chat.id
        set_photo_limit(chats, photo_limit)
        await message.reply(f"<b> ‚úÖ –§–æ—Ç–æ-–∞–Ω—Ç–∏—Å–ø–∞–º —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ {photo_limit}!</b>")


#–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–ø–∞–º-–ª–∏–º–∏—Ç –Ω–∞ –≤–∏–¥–µ–æ
@dp.message_handler(commands=["–≤–∏–¥–µ–æ–ª–∏–º–∏—Ç"], commands_prefix="/!.", is_chat_admin=True)
async def video_limitt_handler(message: types.Message):
    if message.chat.type == 'private':
        return
    if check_chat(message.chat.id):
            create_chat(message.chat.id)
            
    video_limit = message.text.replace("!–≤–∏–¥–µ–æ–ª–∏–º–∏—Ç ", "").replace("/–≤–∏–¥–µ–æ–ª–∏–º–∏—Ç ", "").replace(".–≤–∏–¥–µ–æ–ª–∏–º–∏—Ç ", "").replace("!–í–∏–¥–µ–æ–ª–∏–º–∏—Ç ", "").replace("/–í–∏–¥–µ–æ–ª–∏–º–∏—Ç ", "").replace(".–í–∏–¥–µ–æ–ª–∏–º–∏—Ç ", "")
    raises = ["!–≤–∏–¥–µ–æ–ª–∏–º–∏—Ç", "/–≤–∏–¥–µ–æ–ª–∏–º–∏—Ç", ".–≤–∏–¥–µ–æ–ª–∏–º–∏—Ç", "!–í–∏–¥–µ–æ–ª–∏–º–∏—Ç", "/–í–∏–¥–µ–æ–ª–∏–º–∏—Ç", ".–í–∏–¥–µ–æ–ª–∏–º–∏—Ç", ""]
    if video_limit in raises:
        await message.reply("<b>‚ùå –£–∫–∞–∂–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ!</b>")
        return
    if int(video_limit) < 0:
        await message.reply("<b>‚ùå –£–∫–∞–∂–∏—Ç–µ –≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ!</b>\n –û—Ç –Ω—É–ª—è –¥–æ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏.")
        return
    else:
        chats = message.chat.id
        set_video_limit(chats, video_limit)
        await message.reply(f"<b> ‚úÖ –í–∏–¥–µ–æ-–∞–Ω—Ç–∏—Å–ø–∞–º —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ {video_limit}!</b>")


#–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–ø–∞–º-–ª–∏–º–∏—Ç –Ω–∞ —Å—Ç–∏–∫–µ—Ä—ã
@dp.message_handler(commands=["—Å—Ç–∏–∫–ª–∏–º–∏—Ç"], commands_prefix="/!.", is_chat_admin=True)
async def sticker_limit_handler(message: types.Message):
    if message.chat.type == 'private':
        return
    if check_chat(message.chat.id):
            create_chat(message.chat.id)
            
    sticker_limit = message.text.replace("!—Å—Ç–∏–∫–ª–∏–º–∏—Ç ", "").replace("/—Å—Ç–∏–∫–ª–∏–º–∏—Ç ", "").replace(".—Å—Ç–∏–∫–ª–∏–º–∏—Ç ", "").replace("!–°—Ç–∏–∫–ª–∏–º–∏—Ç ", "").replace("/–°—Ç–∏–∫–ª–∏–º–∏—Ç ", "").replace(".–°—Ç–∏–∫–ª–∏–º–∏—Ç ", "")
    raises = ["!—Å—Ç–∏–∫–ª–∏–º–∏—Ç", "/—Å—Ç–∏–∫–ª–∏–º–∏—Ç", ".—Å—Ç–∏–∫–ª–∏–º–∏—Ç", "!–°—Ç–∏–∫–ª–∏–º–∏—Ç", "/–°—Ç–∏–∫–ª–∏–º–∏—Ç", ".–°—Ç–∏–∫–ª–∏–º–∏—Ç", ""]
    if sticker_limit in raises:
        await message.reply("<b>‚ùå –£–∫–∞–∂–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ!</b>")
        return
    if int(sticker_limit) < 0:
        await message.reply("<b>‚ùå –£–∫–∞–∂–∏—Ç–µ –≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ!</b>\n –û—Ç –Ω—É–ª—è –¥–æ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏.")
        return
    else:
        chats = message.chat.id
        set_sticker_limit(chats, sticker_limit)
        await message.reply(f"<b> ‚úÖ –°—Ç–∏–∫-–∞–Ω—Ç–∏—Å–ø–∞–º —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ {sticker_limit}!</b>")


#–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–ø–∞–º-–ª–∏–º–∏—Ç –Ω–∞ –≥–∏—Ñ–∫–∏
@dp.message_handler(commands=["–≥–∏—Ñ–ª–∏–º–∏—Ç"], commands_prefix="/!.", is_chat_admin=True)
async def anmiation_limit_handler(message: types.Message):
    if message.chat.type == 'private':
        return
    if check_chat(message.chat.id):
            create_chat(message.chat.id)
            
    anmiation_limit = message.text.replace("!–≥–∏—Ñ–ª–∏–º–∏—Ç ", "").replace("/–≥–∏—Ñ–ª–∏–º–∏—Ç ", "").replace(".–≥–∏—Ñ–ª–∏–º–∏—Ç ", "").replace("!–ì–∏—Ñ–ª–∏–º–∏—Ç ", "").replace("/–ì–∏—Ñ–ª–∏–º–∏—Ç ", "").replace(".–ì–∏—Ñ–ª–∏–º–∏—Ç ", "")
    raises = ["!–≥–∏—Ñ–ª–∏–º–∏—Ç", "/–≥–∏—Ñ–ª–∏–º–∏—Ç", ".–≥–∏—Ñ–ª–∏–º–∏—Ç", "!–ì–∏—Ñ–ª–∏–º–∏—Ç", "/–ì–∏—Ñ–ª–∏–º–∏—Ç", ".–ì–∏—Ñ–ª–∏–º–∏—Ç", ""]
    if anmiation_limit in raises:
        await message.reply("<b>‚ùå –£–∫–∞–∂–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ!</b>")
        return
    if int(anmiation_limit) < 0:
        await message.reply("<b>‚ùå –£–∫–∞–∂–∏—Ç–µ –≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ!</b>\n –û—Ç –Ω—É–ª—è –¥–æ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏.")
        return
    else:
        chats = message.chat.id
        set_anmiation_limit(chats, anmiation_limit)
        await message.reply(f"<b> ‚úÖ GIF-–∞–Ω—Ç–∏—Å–ø–∞–º —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ {anmiation_limit}!</b>")


#–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–ø–∞–º-–ª–∏–º–∏—Ç –Ω–∞ –≥–∏—Ñ–∫–∏
@dp.message_handler(commands=["—Ç–µ–∫—Å—Ç–ª–∏–º–∏—Ç"], commands_prefix="/!.", is_chat_admin=True)
async def text_limit_handler(message: types.Message):
    if message.chat.type == 'private':
        return
    if check_chat(message.chat.id):
            create_chat(message.chat.id)
            
    text_limit = message.text.replace("!—Ç–µ–∫—Å—Ç–ª–∏–º–∏—Ç ", "").replace("/—Ç–µ–∫—Å—Ç–ª–∏–º–∏—Ç ", "").replace(".—Ç–µ–∫—Å—Ç–ª–∏–º–∏—Ç ", "").replace("!–¢–µ–∫—Å—Ç–ª–∏–º–∏—Ç ", "").replace("/–¢–µ–∫—Å—Ç–ª–∏–º–∏—Ç ", "").replace(".–¢–µ–∫—Å—Ç–ª–∏–º–∏—Ç ", "")
    raises = ["!—Ç–µ–∫—Å—Ç–ª–∏–º–∏—Ç", "/—Ç–µ–∫—Å—Ç–ª–∏–º–∏—Ç", ".—Ç–µ–∫—Å—Ç–ª–∏–º–∏—Ç", "!–¢–µ–∫—Å—Ç–ª–∏–º–∏—Ç", "/–¢–µ–∫—Å—Ç–ª–∏–º–∏—Ç", ".–¢–µ–∫—Å—Ç–ª–∏–º–∏—Ç", ""]
    if text_limit in raises:
        await message.reply("<b>‚ùå –£–∫–∞–∂–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ!</b>")
        return
    if int(text_limit) < 0:
        await message.reply("<b>‚ùå –£–∫–∞–∂–∏—Ç–µ –≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ!</b>\n –û—Ç –Ω—É–ª—è –¥–æ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏.")
        return
    else:
        chats = message.chat.id
        set_text_limit(chats, text_limit)
        await message.reply(f"<b> ‚úÖ –¢–µ–∫—Å—Ç-–∞–Ω—Ç–∏—Å–ø–∞–º —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ {text_limit}!</b>")

