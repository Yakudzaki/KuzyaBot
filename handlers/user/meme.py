from loader import dp, bot
import logging
from aiogram import types
from aiogram.dispatcher.filters import Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

import aiohttp
from bs4 import BeautifulSoup

from random import randint, choice
from settings import kuzya_news_link
from utils.db.db_utils_users import *
from utils.db.db_utils_warning import *
from utils.db.db_utils_—Åhats import *

async def anti_flood(*args, **kwargs):

    message = args[0]
    await message.answer("–ú–µ–º —á–∏—Ç–∞–π, –∞ –Ω–µ —Å–ø–∞–º—å —Å—É–∫–∞!", show_alert=True)



@dp.message_handler(commands=["meme", "mem", "–º–µ–º"], commands_prefix="/!.")

@dp.throttled(anti_flood,rate=2)

async def meme(message: types.Message):
    users = message.from_user
    
    if message.chat.type != 'private':
        chats = message.chat.id #–û—Ç—Å—é–¥–∞ –∏ –¥–∞–ª–µ–µ, –¥–æ –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–∏ - –≤—ã–∫–ª—é—á–∞—Ç–µ–ª—å —ç—Ç–æ–≥–æ –ø—Ä–∏–∫–æ–ª–∞.
        chat = get_chat(chats)
        if check_chat(message.chat.id):
            create_chat(message.chat.id)
            chat = get_chat(chats)
    
        funny = chat[4] #–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –ø—Ä–∏–∫–æ–ª–æ–≤
        if not funny:
            await message.answer("‚ùå –í —ç—Ç–æ–º —á–∞—Ç–µ –∏–≥—Ä—ã —Å –±–æ—Ç–æ–º –∑–∞–ø—Ä–µ—â–µ–Ω—ã!")
            return
        
        warner = get_warner(message.chat.id, message.from_user.id)
        if warner == None:
            warner = [message.chat.id, message.from_user.id, 0, 0, 0]
        if warner[4] != 0:
            return
    
    user = create_user(users.id, users.username, users.first_name)

    try:

        random_site = randint(1, 3119)

        url = f"https://www.memify.ru/memes/{random_site}"

        async with aiohttp.ClientSession() as session:

            async with session.get(url) as response:

                content = await response.text()

                soup = BeautifulSoup(content, "html.parser")

                items = soup.find_all("div", {"class": "infinite-item card"})

                random_item = choice(items)

                second_a = random_item.find_all("a")[1]

                keyboard = types.InlineKeyboardMarkup()

                buttons = [

                    types.InlineKeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="update")

                ]

                keyboard.add(*buttons)
                await bot.send_chat_action(message.chat.id, types.ChatActions.UPLOAD_PHOTO)
                await bot.send_photo(message.chat.id, second_a.get("href"), caption = f'‚òÑÔ∏è –õ–æ–≤–∏ –º–µ–º.\n\n<a href="{kuzya_news_link}">–ö–∞–Ω–∞–ª —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏</a>', reply_markup=keyboard, parse_mode="html")

    # except Exception as e:
    except:
        try:
    
            random_site = randint(1, 2857)
    
            url = f"https://www.memify.ru/memes/{random_site}"
    
            async with aiohttp.ClientSession() as session:
    
                async with session.get(url) as response:
    
                    content = await response.text()
    
                    soup = BeautifulSoup(content, "html.parser")
    
                    items = soup.find_all("div", {"class": "infinite-item card"})
    
                    random_item = choice(items)
    
                    second_a = random_item.find_all("a")[1]
    
                    keyboard = types.InlineKeyboardMarkup()
    
                    buttons = [
    
                        types.InlineKeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="update")
    
                    ]
    
                    keyboard.add(*buttons)
                    await bot.send_chat_action(message.chat.id, types.ChatActions.UPLOAD_PHOTO)
                    await bot.send_photo(message.chat.id, second_a.get("href"), caption = f'‚òÑÔ∏è –õ–æ–≤–∏ –º–µ–º.\n\n<a href="{kuzya_news_link}">–ö–∞–Ω–∞–ª —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏</a>', reply_markup=keyboard, parse_mode="html")
    
        except Exception as e:
            print(f"{e}")
            logging.info(f"{e}")
            return

        
        # except Exception as e:
    
            # print(e)
            