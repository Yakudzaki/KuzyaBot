from loader import dp, bot
from aiogram import types

from utils.db.db_utils_users import *
from utils.db.db_utils_—Åhats import *
from utils.db.db_utils_nicks import *
from utils.db.db_utils_warning import *

from utils.db.relations.db_utils_moniker import *
from settings import *
from ..f_lib.other import message_user_get, morph_word_simple, similaring, years_letter, update_morph, as_del_msg
import html

@dp.message_handler(commands=["username"], commands_prefix="!/.")
async def username_handler(message: types.Message):
    users = message.from_user
    
    try:
        moniker = get_max_monik(users.id)
        if moniker != None:
            set_moniker(users.id, moniker[1])
    except:
        pass
    
    

    create_user(users.id, users.username, users.first_name)
    
    user = message.from_user
    
    username = user.username
    
    if username != None:
            set_username(user.id, username)
            msg = await message.reply("<b>‚úÖ –í–∞—à–µ Username —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!</b>")
            await as_del_msg(message.chat.id, msg.message_id, time_del)
            return
    else:
            set_username(user.id, user.id)
            msg = await message.reply("<b>‚úÖ –í–∞—à–µ Username —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!</b>")
            await as_del_msg(message.chat.id, msg.message_id, time_del)
            return



@dp.message_handler(commands=["–ø—Ä–æ–∑–≤–∏—â–µ", "–ø—Ä–æ–∑–≤–∏—â–µ-–∏", "–ø—Ä–æ–∑–≤–∏—â–µ-—Ä", "–ø—Ä–æ–∑–≤–∏—â–µ-–¥", "–ø—Ä–æ–∑–≤–∏—â–µ-–≤", "–ø—Ä–æ–∑–≤–∏—â–µ-—Ç", "–ø—Ä–æ–∑–≤–∏—â–µ-–ø", "—Ä–æ–∑–≤–∏—â–µ"], commands_prefix="+–ø–ü")
async def nick_handler(message: types.Message):

    
    if message.chat.type != 'private':
        warner = get_warner(message.chat.id, message.from_user.id)
        if warner == None:
            warner = [message.chat.id, message.from_user.id, 0, 0, 0]
        if warner[4] != 0:
            return
    
    users = message.from_user
    user = create_user(users.id, users.username, users.first_name)
    command = message.text.split()[0]
    
    if message.reply_to_message:
        us = message.reply_to_message.from_user
        user = create_user(us.id, us.username, us.first_name)
        monikse = get_monik(user[0], user[8])
        
        if check_users_nick(user[0]):
            morph = morph_word_simple(user[2], user[4])
            nick = create_user_nick(user[0], user[2], morph[0], morph[1], morph[2], morph[3], morph[4], morph[5])
        
        if monikse == None or user[8] == "" or user[8] == None:
            msg = await message.reply("<b>‚ùå –£ –Ω–µ–≥–æ –Ω–µ—Ç –ø—Ä–æ–∑–≤–∏—â–∞!</b>")
            await as_del_msg(message.chat.id, msg.message_id, time_del)
            return
        
        
        if monikse[3] == '' and monikse[4] == '' and monikse[5] == '' and monikse[6] == '' and monikse[7] == '' and monikse[8] == '':
            no_monik = True
        elif monikse[3] == None and monikse[4] == None and monikse[5] == None and monikse[6] == None and monikse[7] == None and monikse[8] != None:
            no_monik = True
        else:
            no_monik = False
        
        if no_monik:
            monico = morph_word_simple(user[8], user[4])
            set_monik_nomn(user[0], user[8], monico[0])
            set_monik_gent(user[0], user[8], monico[1])
            set_monik_datv(user[0], user[8], monico[2])
            set_monik_accs(user[0], user[8], monico[3])
            set_monik_ablt(user[0], user[8], monico[4])
            set_monik_loct(user[0], user[8], monico[5])

        monikse = get_monik(user[0], user[8])
        msg = await message.reply(f"üé≠ –ü—Ä–æ–∑–≤–∏—â–µ - {html.escape(monikse[1])}\n‚Äî\n–ü–∞–¥–µ–∂–∏:\
                \n{html.escape(monikse[3])} ‚Äî –∏–º–µ–Ω–∏—Ç–µ–ª—å–Ω—ã–π.\
                \n{html.escape(monikse[4])} ‚Äî —Ä–æ–¥–∏—Ç–µ–ª—å–Ω—ã–π.\
                \n{html.escape(monikse[5])} ‚Äî –¥–∞—Ç–µ–ª—å–Ω—ã–π.\
                \n{html.escape(monikse[6])} ‚Äî –≤–∏–Ω–∏—Ç–µ–ª—å–Ω—ã–π.\
                \n{html.escape(monikse[7])} ‚Äî —Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–π.\
                \n{html.escape(monikse[8])} ‚Äî –ø—Ä–µ–¥–ª–æ–∂–Ω—ã–π.\
                \n‚Äî\
                \n<code>+—Ç—ã</code> (–ø—Ä–æ–∑–≤–∏—â–µ) - —Å–º–µ–Ω–∏—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–æ–∑–≤–∏—â–µ –∫–æ–º—É-—Ç–æ –¥—Ä—É–≥–æ–º—É.\
                \n<code>–ø–∞–¥–µ–∂–∏</code> ‚Äî –≤—ã–∑–≤–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –ø–∞–¥–µ–∂–∞–º.\
                \n<code>+–ø—Ä–æ–∑–≤–∏—â–µ</code> (–ª—é–±–æ–π —Å–∏–º–≤–æ–ª) - –≤–µ—Ä–Ω—É—Ç—å –ø–∞–¥–µ–∂–∏ –ø—Ä–æ–∑–≤–∏—â–∞ –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É.")
        
        await as_del_msg(message.chat.id, msg.message_id, time_del)
        return
    
    if check_users_nick(user[0]):
        morph = morph_word_simple(user[2], user[4])
        nick = create_user_nick(user[0], user[2], morph[0], morph[1], morph[2], morph[3], morph[4], morph[5])
    
    monic = message.text.replace(f"{command} ", "").replace(f"{command}", "")
    raises = [""]
    monikse = get_monik(user[0], user[8])
    if monikse == None or user[8] == "" or user[8] == None:
        msg = await message.reply("<b>‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–æ–∑–≤–∏—â–∞!</b>")
        await as_del_msg(message.chat.id, msg.message_id, time_del)
        return
    
    if monikse[3] == '' and monikse[4] == '' and monikse[5] == '' and monikse[6] == '' and monikse[7] == '' and monikse[8] == '':
        no_monik = True
    elif monikse[3] == None and monikse[4] == None and monikse[5] == None and monikse[6] == None and monikse[7] == None and monikse[8] != None:
        no_monik = True
    else:
        no_monik = False
    
    if no_monik:
        monico = morph_word_simple(user[8], user[4])
        set_monik_nomn(user[0], user[8], monico[0])
        set_monik_gent(user[0], user[8], monico[1])
        set_monik_datv(user[0], user[8], monico[2])
        set_monik_accs(user[0], user[8], monico[3])
        set_monik_ablt(user[0], user[8], monico[4])
        set_monik_loct(user[0], user[8], monico[5])
        
    
    
    if monic in raises or command.lower().startswith("–ø—Ä–æ–∑–≤–∏—â–µ"):
        monikse = get_monik(user[0], user[8])
        msg = await message.reply(f"üé≠ –¢–≤–æ—ë –ø—Ä–æ–∑–≤–∏—â–µ - {html.escape(user[8])}\n‚Äî\n–ü–∞–¥–µ–∂–∏:\
        \n{html.escape(monikse[3])} ‚Äî –∏–º–µ–Ω–∏—Ç–µ–ª—å–Ω—ã–π. (<code>+–ø—Ä–æ–∑–≤–∏—â–µ-–∏</code> –ø—Ä–æ–∑–≤–∏—â–µ)\
        \n{html.escape(monikse[4])} ‚Äî —Ä–æ–¥–∏—Ç–µ–ª—å–Ω—ã–π. (<code>+–ø—Ä–æ–∑–≤–∏—â–µ-—Ä</code> –ø—Ä–æ–∑–≤–∏—â–µ)\
        \n{html.escape(monikse[5])} ‚Äî –¥–∞—Ç–µ–ª—å–Ω—ã–π. (<code>+–ø—Ä–æ–∑–≤–∏—â–µ-–¥</code> –ø—Ä–æ–∑–≤–∏—â–µ)\
        \n{html.escape(monikse[6])} ‚Äî –≤–∏–Ω–∏—Ç–µ–ª—å–Ω—ã–π. (<code>+–ø—Ä–æ–∑–≤–∏—â–µ-–≤</code> –ø—Ä–æ–∑–≤–∏—â–µ)\
        \n{html.escape(monikse[7])} ‚Äî —Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–π. (<code>+–ø—Ä–æ–∑–≤–∏—â–µ-—Ç</code> –ø—Ä–æ–∑–≤–∏—â–µ)\
        \n{html.escape(monikse[8])} ‚Äî –ø—Ä–µ–¥–ª–æ–∂–Ω—ã–π. (<code>+–ø—Ä–æ–∑–≤–∏—â–µ-–ø</code> –ø—Ä–æ–∑–≤–∏—â–µ)\
        \n‚Äî\
        \n<code>+—Ç—ã</code> (–ø—Ä–æ–∑–≤–∏—â–µ) - —Å–º–µ–Ω–∏—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–æ–∑–≤–∏—â–µ –∫–æ–º—É-—Ç–æ –¥—Ä—É–≥–æ–º—É.\
        \n<code>–ø–∞–¥–µ–∂–∏</code> ‚Äî –≤—ã–∑–≤–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –ø–∞–¥–µ–∂–∞–º.\
        \n<code>+–ø—Ä–æ–∑–≤–∏—â–µ</code> (–ª—é–±–æ–π —Å–∏–º–≤–æ–ª) - –≤–µ—Ä–Ω—É—Ç—å –ø–∞–¥–µ–∂–∏ –ø—Ä–æ–∑–≤–∏—â–∞ –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É.\
        \n‚Äî\
        \n–ü–°. –í —Å–∫–æ–±–∫–∞—Ö —Å–ø—Ä–∞–≤–∞ –æ—Ç –ø–∞–¥–µ–∂–µ–π —É–∫–∞–∑–∞–Ω—ã –∫–æ–º–∞–Ω–¥—ã, —á—Ç–æ–±—ã –º–µ–Ω—è—Ç—å —Å–∫–ª–æ–Ω–µ–Ω–∏—è —Å–≤–æ–µ–≥–æ –ø—Ä–æ–∑–≤–∏—â–∞.")
        await as_del_msg(message.chat.id, msg.message_id, time_del)
        return
    
    
    elif len(monic) > 25:
        msg = await message.reply("<b>‚ùå –ø—Ä–æ–∑–≤–∏—â–µ –Ω–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –±–æ–ª—å—à–µ 25 —Å–∏–º–≤–æ–ª–æ–≤!</b>")
        await as_del_msg(message.chat.id, msg.message_id, time_del)
        return
    
    elif "https://" in monic:
        msg = await message.reply("<b>‚ùå –ø—Ä–æ–∑–≤–∏—â–µ –Ω–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å—Å—ã–ª–æ–∫!</b>")
        await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
        await as_del_msg(message.chat.id, msg.message_id, time_del)
        return
    
    else:
        if monic not in raises and command.lower().endswith("–ø—Ä–æ–∑–≤–∏—â–µ"):
            monico = morph_word_simple(user[8], user[4])
            set_monik_nomn(user[0], user[8], monico[0])
            set_monik_gent(user[0], user[8], monico[1])
            set_monik_datv(user[0], user[8], monico[2])
            set_monik_accs(user[0], user[8], monico[3])
            set_monik_ablt(user[0], user[8], monico[4])
            set_monik_loct(user[0], user[8], monico[5])
            
            msg = await message.reply(f"üé≠ –¢–≤–æ—ë –ø—Ä–æ–∑–≤–∏—â–µ - {html.escape(user[8])}\n‚Äî\n–ü–∞–¥–µ–∂–∏:\
            \n{html.escape(monico[0])} ‚Äî –∏–º–µ–Ω–∏—Ç–µ–ª—å–Ω—ã–π. (<code>+–ø—Ä–æ–∑–≤–∏—â–µ-–∏</code> –ø—Ä–æ–∑–≤–∏—â–µ)\
            \n{html.escape(monico[1])} ‚Äî —Ä–æ–¥–∏—Ç–µ–ª—å–Ω—ã–π. (<code>+–ø—Ä–æ–∑–≤–∏—â–µ-—Ä</code> –ø—Ä–æ–∑–≤–∏—â–µ)\
            \n{html.escape(monico[2])} ‚Äî –¥–∞—Ç–µ–ª—å–Ω—ã–π. (<code>+–ø—Ä–æ–∑–≤–∏—â–µ-–¥</code> –ø—Ä–æ–∑–≤–∏—â–µ)\
            \n{html.escape(monico[3])} ‚Äî –≤–∏–Ω–∏—Ç–µ–ª—å–Ω—ã–π. (<code>+–ø—Ä–æ–∑–≤–∏—â–µ-–≤</code> –ø—Ä–æ–∑–≤–∏—â–µ)\
            \n{html.escape(monico[4])} ‚Äî —Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–π. (<code>+–ø—Ä–æ–∑–≤–∏—â–µ-—Ç</code> –ø—Ä–æ–∑–≤–∏—â–µ)\
            \n{html.escape(monico[5])} ‚Äî –ø—Ä–µ–¥–ª–æ–∂–Ω—ã–π. (<code>+–ø—Ä–æ–∑–≤–∏—â–µ-–ø</code> –ø—Ä–æ–∑–≤–∏—â–µ)\
            \n‚Äî\
            \n<code>–ø–∞–¥–µ–∂–∏</code> ‚Äî –≤—ã–∑–≤–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –ø–∞–¥–µ–∂–∞–º.\
            \n<code>+—Ç—ã</code> (–ø—Ä–æ–∑–≤–∏—â–µ) - —Å–º–µ–Ω–∏—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–æ–∑–≤–∏—â–µ –∫–æ–º—É-—Ç–æ –¥—Ä—É–≥–æ–º—É.\
            \n‚Äî\
            \n–ü–°. –í —Å–∫–æ–±–∫–∞—Ö —Å–ø—Ä–∞–≤–∞ –æ—Ç –ø–∞–¥–µ–∂–µ–π —É–∫–∞–∑–∞–Ω—ã –∫–æ–º–∞–Ω–¥—ã, —á—Ç–æ–±—ã –º–µ–Ω—è—Ç—å —Å–∫–ª–æ–Ω–µ–Ω–∏—è —Å–≤–æ–µ–≥–æ –ø—Ä–æ–∑–≤–∏—â–∞.")
            await as_del_msg(message.chat.id, msg.message_id, time_del)
            return
        
        if command.lower().endswith("–ø—Ä–æ–∑–≤–∏—â–µ"):
            return
        
        moni = monic.split()
        mono_morph = morph_word_simple(user[8], user[4])
        
        if command.lower().endswith("–ø—Ä–æ–∑–≤–∏—â–µ-–∏"):
            mono = mono_morph[0].split()
        elif command.lower().endswith("–ø—Ä–æ–∑–≤–∏—â–µ-—Ä"):
            mono = mono_morph[1].split()
        elif command.lower().endswith("–ø—Ä–æ–∑–≤–∏—â–µ-–¥"):
            mono = mono_morph[2].split()
        elif command.lower().endswith("–ø—Ä–æ–∑–≤–∏—â–µ-–≤"):
            mono = mono_morph[3].split()
        elif command.lower().endswith("–ø—Ä–æ–∑–≤–∏—â–µ-—Ç"):
            mono = mono_morph[4].split()
        elif command.lower().endswith("–ø—Ä–æ–∑–≤–∏—â–µ-–ø"):
            mono = mono_morph[5].split()

        else:
            mono = user[8].split()

        
        if len(moni) != len(mono):
            msg = await message.reply("<b>‚ùå –û—Ç–ª–∏—á–∞–µ—Ç—Å—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤!</b>")
            await as_del_msg(message.chat.id, msg.message_id, time_del)
            return
        
        stop = False
        i = 0
        while stop == False:
            try:
                moni_i = moni[i].lower()
                mono_i = mono[i].lower()
                i = i + 1
                
                if len(moni_i) > len(mono_i) + 2:
                    msg = await message.reply("<b>‚ùå –û—Ç–ª–∏—á–∞–µ—Ç—Å—è –±–æ–ª–µ–µ —á–µ–º –Ω–∞ –¥–≤–∞ –∑–Ω–∞–∫–∞!</b>")
                    await as_del_msg(message.chat.id, msg.message_id, time_del)
                    return
                
                if len(moni_i) < len(mono_i) - 2:
                    msg = await message.reply("<b>‚ùå –û—Ç–ª–∏—á–∞–µ—Ç—Å—è –±–æ–ª–µ–µ —á–µ–º –Ω–∞ –¥–≤–∞ –∑–Ω–∞–∫–∞!</b>")
                    await as_del_msg(message.chat.id, msg.message_id, time_del)
                    return
                parameter = int(round(100 - ( 100 * ( 2 / len(mono_i) ) )))

                
                if parameter > 90:
                    parameter = 90
                
                if parameter < 60:
                    parameter = 60
                
                if similaring(moni_i, [mono_i], parameter, 2) != True:
                    
                    msg = await message.reply("<b>‚ùå C–∏–ª—å–Ω–æ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è!</b>")
                    await as_del_msg(message.chat.id, msg.message_id, time_del)
                    return
                
            except:
                stop = True
       

        if command.lower().endswith("–ø—Ä–æ–∑–≤–∏—â–µ-—Ä"):
            set_monik_gent(user[0], user[8], monic)
            msg = await message.reply("<b>‚úÖ –ü—Ä–æ–∑–≤–∏—â–µ-—Ä —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!</b>")
            await as_del_msg(message.chat.id, msg.message_id, time_del)
            return
        elif command.lower().endswith("–ø—Ä–æ–∑–≤–∏—â–µ-–¥"):
            set_monik_datv(user[0], user[8], monic)
            msg = await message.reply("<b>‚úÖ –ü—Ä–æ–∑–≤–∏—â–µ-–¥ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!</b>")
            await as_del_msg(message.chat.id, msg.message_id, time_del)
            return
        elif command.lower().endswith("–ø—Ä–æ–∑–≤–∏—â–µ-–≤"):
            set_monik_accs(user[0], user[8], monic)
            msg = await message.reply("<b>‚úÖ –ü—Ä–æ–∑–≤–∏—â–µ-–≤ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!</b>")
            await as_del_msg(message.chat.id, msg.message_id, time_del)
            return
        elif command.lower().endswith("–ø—Ä–æ–∑–≤–∏—â–µ-—Ç"):
            set_monik_ablt(user[0], user[8], monic)
            msg = await message.reply("<b>‚úÖ –ü—Ä–æ–∑–≤–∏—â–µ-—Ç —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!</b>")
            await as_del_msg(message.chat.id, msg.message_id, time_del)
            return
        elif command.lower().endswith("–ø—Ä–æ–∑–≤–∏—â–µ-–ø"):
            set_monik_loct(user[0], user[8], monic)
            msg = await message.reply("<b>‚úÖ –ü—Ä–æ–∑–≤–∏—â–µ-–ø —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!</b>")
            await as_del_msg(message.chat.id, msg.message_id, time_del)
            return
        elif command.lower().endswith("–ø—Ä–æ–∑–≤–∏—â–µ-–∏"):
            set_monik_nomn(user[0], user[8], monic)
            msg = await message.reply("<b>‚úÖ –ü—Ä–æ–∑–≤–∏—â–µ-–∏ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!</b>")
            await as_del_msg(message.chat.id, msg.message_id, time_del)
            return
        else:
            msg = await message.reply("<b>‚úÖ –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!</b>")
            await as_del_msg(message.chat.id, msg.message_id, time_del)
            return
        
        





@dp.message_handler(commands=["–Ω–∏–∫", "–Ω–∏–∫-–∏", "–Ω–∏–∫-—Ä", "–Ω–∏–∫-–¥", "–Ω–∏–∫-–≤", "–Ω–∏–∫-—Ç", "–Ω–∏–∫-–ø"], commands_prefix="+")
async def nick_handler(message: types.Message):
    if message.chat.type != 'private':
        warner = get_warner(message.chat.id, message.from_user.id)
        if warner == None:
            warner = [message.chat.id, message.from_user.id, 0, 0, 0]
        if warner[4] != 0:
            return
    
    users = message.from_user
    user = create_user(users.id, users.username, users.first_name)
    command = message.text.split()[0]
    
    if check_users_nick(user[0]):
        morph = morph_word_simple(user[2], user[4])
        nick = create_user_nick(user[0], user[2], morph[0], morph[1], morph[2], morph[3], morph[4], morph[5])
    
    nick = message.text.replace(f"{command} ", "").replace(f"{command}", "")
    raises = [""]
    
    if nick in raises:
        morph = morph_word_simple(user[2], user[4])
        create_user_nick(user[0], user[2], morph[0], morph[1], morph[2], morph[3], morph[4], morph[5])
        msg = await message.reply("<b>‚ùå –£–∫–∞–∂–∏—Ç–µ –Ω–∏–∫!</b>")
        await as_del_msg(message.chat.id, msg.message_id, time_del)
        return
    
    elif len(nick) > 20:
        
        if command.lower().endswith("–Ω–∏–∫"):
            msg = await message.reply("<b>‚ùå –ù–∏–∫ –Ω–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –±–æ–ª—å—à–µ 20 —Å–∏–º–≤–æ–ª–æ–≤!</b>")
            await as_del_msg(message.chat.id, msg.message_id, time_del)
            return
        
        elif len(nick) > 25:
            msg = await message.reply("<b>‚ùå –ù–∏–∫ –Ω–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –±–æ–ª—å—à–µ 25 —Å–∏–º–≤–æ–ª–æ–≤!</b>")
            await as_del_msg(message.chat.id, msg.message_id, time_del)
            return

    elif "https://" in nick:
        msg = await message.reply("<b>‚ùå –ù–∏–∫ –Ω–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å—Å—ã–ª–æ–∫!</b>")
        await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
        await as_del_msg(message.chat.id, msg.message_id, time_del)
    
    else:
        if command.lower().endswith("–Ω–∏–∫"):
            if check_nick(nick) == True:
                msg = await message.reply("<b>‚úÖ –ù–∏–∫ —É–∂–µ –∑–∞–Ω—è—Ç!</b>")
                await as_del_msg(message.chat.id, msg.message_id, time_del)
                return
            
            set_nick(user[0], nick)
            user = get_user(user[0])
            morph = morph_word_simple(user[2], user[4])
            create_user_nick(user[0], user[2], morph[0], morph[1], morph[2], morph[3], morph[4], morph[5])
            msg = await message.reply("<b>‚úÖ –ù–∏–∫ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω!</b>")
            await as_del_msg(message.chat.id, msg.message_id, time_del)
            return
        
        elif command.lower().endswith("–Ω–∏–∫-–∏"):
            set_nick_nomn(user[0], nick)
            msg = await message.reply("<b>‚úÖ –ù–∏–∫-–∏ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω!</b>")
            await as_del_msg(message.chat.id, msg.message_id, time_del)
            return
        elif command.lower().endswith("–Ω–∏–∫-—Ä"):
            set_nick_gent(user[0], nick)
            msg = await message.reply("<b>‚úÖ –ù–∏–∫-—Ä —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω!</b>")
            await as_del_msg(message.chat.id, msg.message_id, time_del)
            return
        elif command.lower().endswith("–Ω–∏–∫-–¥"):
            set_nick_datv(user[0], nick)
            msg = await message.reply("<b>‚úÖ –ù–∏–∫-–¥ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω!</b>")
            await as_del_msg(message.chat.id, msg.message_id, time_del)
            return
        elif command.lower().endswith("–Ω–∏–∫-–≤"):
            set_nick_accs(user[0], nick)
            msg = await message.reply("<b>‚úÖ –ù–∏–∫-–≤ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω!</b>")
            await as_del_msg(message.chat.id, msg.message_id, time_del)
            return
        elif command.lower().endswith("–Ω–∏–∫-—Ç"):
            set_nick_ablt(user[0], nick)
            msg = await message.reply("<b>‚úÖ –ù–∏–∫-—Ç —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω!</b>")
            await as_del_msg(message.chat.id, msg.message_id, time_del)
            return
        elif command.lower().endswith("–Ω–∏–∫-–ø"):
            set_nick_loct(user[0], nick)
            msg = await message.reply("<b>‚úÖ –ù–∏–∫-–ø —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω!</b>")
            await as_del_msg(message.chat.id, msg.message_id, time_del)
            return
        
        else:
            if check_nick(nick) == True:
                msg = await message.reply("<b>‚ùå –ù–∏–∫ —É–∂–µ –∑–∞–Ω—è—Ç!</b>")
                await as_del_msg(message.chat.id, msg.message_id, time_del)
                return
            
            set_nick(user[0], nick)
            morph = morph_word_simple(user[2], user[4])
            nick = create_user_nick(user[0], user[2], morph[0], morph[1], morph[2], morph[3], morph[4], morph[5])
            msg = await message.reply("<b>‚úÖ –ù–∏–∫ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω!</b>")
            await as_del_msg(message.chat.id, msg.message_id, time_del)
            return





@dp.message_handler(commands=["—Ç—ã"], commands_prefix="+")
async def moniker_handler(message: types.Message):
    if message.chat.type != 'private':
        warner = get_warner(message.chat.id, message.from_user.id)
        if warner == None:
            warner = [message.chat.id, message.from_user.id, 0, 0, 0]
        if warner[4] != 0:
            return
    
    if message.reply_to_message:
        us = message.reply_to_message.from_user
        usern = create_user(us.id, us.username, us.first_name)
            
        if usern[0] in no_rp_list:
            return
        
        users = message.from_user
        user = create_user(users.id, users.username, users.first_name)
        
        
        if user == usern:
            msg = await message.reply("<b>‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ–ø—Ä–∏–º–µ–Ω–∏–º–∞ –∫ —Å–∞–º–æ–º—É —Å–µ–±–µ!</b>")
            await as_del_msg(message.chat.id, msg.message_id, time_del)
            return
        # if user[5] < 0:
            # await message.reply("<b>‚ùå –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ –¥–ª—è —ç—Ç–æ–≥–æ!</b>")
            # return
        mix = user[5]/10
        
        add_rep_monik = int(round(mix)) + 1
        command = message.text.split()[0]
        moniker = message.text.replace(command + " ", "").strip() 

        if moniker == command:
            msg = await message.reply("<b>‚ùå –£–∫–∞–∂–∏—Ç–µ –ø—Ä–æ–∑–≤–∏—â–µ!</b>")
            await as_del_msg(message.chat.id, msg.message_id, time_del)
            return
        
        elif len(moniker) > 20:
            msg = await message.reply("<b>‚ùå –ü—Ä–æ–∑–≤–∏—â–µ –Ω–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –±–æ–ª—å—à–µ 20 —Å–∏–º–≤–æ–ª–æ–≤!</b>")
            await as_del_msg(message.chat.id, msg.message_id, time_del)
            return
        
        elif "https://" in moniker:
            msg = await message.reply("<b>‚ùå –ü—Ä–æ–∑–≤–∏—â–µ –Ω–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å—Å—ã–ª–æ–∫!</b>")
            await as_del_msg(message.chat.id, msg.message_id, time_del)
            await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
            return
        
        
        if check_monik(usern[0], moniker) == False: #–ò—â–µ–º —É—Å–∏–ª—è–µ–º–æ–µ –ø—Ä–æ–∑–≤–∏—â–µ –≤ –±–∞–∑–µ. False -  –ù–µ –Ω–∞—à–ª–∏. –õ—é–±–æ–µ –ø–µ—Ä–≤–æ–µ - –±—É–¥–µ—Ç —Ç–∞–∫–∏–º.
            create_monik(usern[0], moniker)
            
            add_z_rep(usern[0], moniker, add_rep_monik) #–î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–ø—É—Ç–∞—Ü–∏—é –ø—Ä–æ–∑–≤–∏—â—É.
            take_rep(user[0])
            
            msg = await message.answer(f"‚ùå –ü–æ–Ω–∏–∂–µ–Ω–∏–µ –∑–∞—Å—á–∏—Ç–∞–Ω–æ (<a href='tg://user?id={user[0]}'>-1</a>)")
            await as_del_msg(message.chat.id, msg.message_id, time_del)
            
            msg = await message.reply("<b>‚úÖ –ü—Ä–æ–∑–≤–∏—â–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ!</b>")
            await as_del_msg(message.chat.id, msg.message_id, time_del)
            
            try:
                moniker = get_max_monik(usern[0])
                if moniker != None:
                    if moniker[1] != usern[8]:
                        set_moniker(usern[0], moniker[1])
                        msg = await message.reply("<b>‚úÖ –ü—Ä–æ–∑–≤–∏—â–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!</b>")
                        await as_del_msg(message.chat.id, msg.message_id, time_del)
            except:
                pass
            
            return
        
        else:
            add_z_rep(usern[0], moniker, add_rep_monik) #–î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–ø—É—Ç–∞—Ü–∏—é –ø—Ä–æ–∑–≤–∏—â—É.
            take_rep(user[0])
            
            msg = await message.answer(f"‚ùå –ü–æ–Ω–∏–∂–µ–Ω–∏–µ –∑–∞—Å—á–∏—Ç–∞–Ω–æ (<a href='tg://user?id={user[0]}'>-1</a>)")
            await as_del_msg(message.chat.id, msg.message_id, time_del)
            try:
                monikerm = get_max_monik(usern[0])
                if monikerm != None:
                    if monikerm[1] != usern[8]:
                        msg = await message.reply("<b>‚úÖ –ü—Ä–æ–∑–≤–∏—â–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!</b>")
                        await as_del_msg(message.chat.id, msg.message_id, time_del)
                        set_moniker(usern[0], monikerm[1])
                    else:
                        if moniker == monikerm[1]:
                            msg = await message.reply("<b>‚úÖ –¢–µ–∫—É—â–µ–µ –ø—Ä–æ–∑–≤–∏—â–µ —É—Å–ø–µ—à–Ω–æ —É—Å–∏–ª–µ–Ω–æ!</b>")
                            await as_del_msg(message.chat.id, msg.message_id, time_del)
                        else:
                            msg = await message.reply("<b>‚úÖ –ü—Ä–æ–∑–≤–∏—â–µ —É—Å–ø–µ—à–Ω–æ —É—Å–∏–ª–µ–Ω–æ!</b>")
                            await as_del_msg(message.chat.id, msg.message_id, time_del)
            except:
                pass

    else:
        msg = await message.reply("<b>‚ùå –≠—Ç—É –∫–æ–º–∞–Ω–¥—É —Å–ª–µ–¥—É–µ—Ç –ø—Ä–∏–º–µ–Ω—è—Ç—å –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!</b>")
        await as_del_msg(message.chat.id, msg.message_id, time_del)
        return




@dp.message_handler(commands=["–±–∏–æ"], commands_prefix="+")
async def bio_handler(message: types.Message):
    if message.chat.type != 'private':
        warner = get_warner(message.chat.id, message.from_user.id)
        if warner == None:
            warner = [message.chat.id, message.from_user.id, 0, 0, 0]
        if warner[4] != 0:
            return
    
    users = message.from_user
    create_user(users.id, users.username, users.first_name)
    bio = message.text.replace("+–±–∏–æ ", "").replace("+–ë–∏–æ ", "")
    raises = ["+–±–∏–æ", "+–ë–∏–æ", ""]
    if bio in raises:
        msg = await message.reply("<b>‚ùå –£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç!</b>")
        await as_del_msg(message.chat.id, msg.message_id, time_del)
        return
    elif len(bio) > 50:
        msg = await message.reply("<b>‚ùå –ë–∏–æ –Ω–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –±–æ–ª—å—à–µ 50 —Å–∏–º–≤–æ–ª–æ–≤!</b>")
        await as_del_msg(message.chat.id, msg.message_id, time_del)
        return
    elif "https://" in bio:
        msg = await message.reply("<b>‚ùå –ë–∏–æ –Ω–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å—Å—ã–ª–æ–∫!</b>")
        await as_del_msg(message.chat.id, msg.message_id, time_del)
        await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
        return
    else:
        user = message.from_user
        set_bio(user.id, bio)
        msg = await message.reply("<b>‚úÖ –ë–∏–æ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!</b>")
        await as_del_msg(message.chat.id, msg.message_id, time_del)
        return


@dp.message_handler(commands=["–≤–∏–¥"], commands_prefix="+")
async def bio_handler(message: types.Message):
    if message.chat.type != 'private':
        warner = get_warner(message.chat.id, message.from_user.id)
        if warner == None:
            warner = [message.chat.id, message.from_user.id, 0, 0, 0]
        if warner[4] != 0:
            return
    
    users = message.from_user
    create_user(users.id, users.username, users.first_name)
    
    specie = message.text.replace("+–≤–∏–¥ ", "").replace("+–í–∏–¥ ", "")
    raises = ["+–≤–∏–¥", "+–í–∏–¥", ""]
    if specie in raises:
        msg = await message.reply("<b>‚ùå –£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç!</b>")
        await as_del_msg(message.chat.id, msg.message_id, time_del)
        return
    elif len(specie) > 20:
        msg = await message.reply("<b>‚ùå –í–∏–¥ –Ω–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –±–æ–ª—å—à–µ 20 —Å–∏–º–≤–æ–ª–æ–≤!</b>")
        await as_del_msg(message.chat.id, msg.message_id, time_del)
        return
    elif "https://" in specie:
        msg = await message.reply("<b>‚ùå –í–∏–¥ –Ω–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å—Å—ã–ª–æ–∫!</b>")
        await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
        await as_del_msg(message.chat.id, msg.message_id, time_del)
        return
    else:
       
        set_specie(users.id, specie)
        
        user = get_user(users.id)
        
        if user[4] == 3 or user[4] == 4:
            set_gender(users.id, 0)
        msg = await message.reply("<b>‚úÖ –í–∏–¥ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω!</b>")
        await as_del_msg(message.chat.id, msg.message_id, time_del)
        return


@dp.message_handler(commands=["–ø–æ–ª"], commands_prefix="+")
async def gender_handler(message: types.Message):
    if message.chat.type != 'private':
        warner = get_warner(message.chat.id, message.from_user.id)
        if warner == None:
            warner = [message.chat.id, message.from_user.id, 0, 0, 0]
        if warner[4] != 0:
            return
    
    gender = message.text.replace("+–ø–æ–ª ", "").replace("+–ü–æ–ª ", "")
    raises = ["+–ø–æ–ª", "+–ü–æ–ª", ""]
    users = message.from_user
    user = create_user(message.from_user.id, message.from_user.username, message.from_user.first_name)
    update_morph(user[0])
    
    
    if user[4] == 3 or user[4] == 4:
        if gender in raises:
            msg = await message.reply("<b>‚ùå –£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç!</b>")
            await as_del_msg(message.chat.id, msg.message_id, time_del)
            return
        elif len(gender) > 20:
            msg = await message.reply("<b>‚ùå –ü–æ–ª –Ω–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –±–æ–ª—å—à–µ 20 —Å–∏–º–≤–æ–ª–æ–≤!</b>")
            await as_del_msg(message.chat.id, msg.message_id, time_del)
            return
        elif "https://" in gender:
            msg = await message.reply("<b>‚ùå –ü–æ–ª –Ω–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å—Å—ã–ª–æ–∫!</b>")
            await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
            await as_del_msg(message.chat.id, msg.message_id, time_del)
            return
        else:
            set_specie(users.id, gender)
            msg = await message.reply("<b>‚úÖ –ü–æ–ª —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω!</b>")
            await as_del_msg(message.chat.id, msg.message_id, time_del)
            return
    if gender in raises:

        msg = await message.reply("<b>‚ùå –£–∫–∞–∂–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ!</b>")
        await as_del_msg(message.chat.id, msg.message_id, time_del)
        return
    
    allow = 0
    for izvrat in botovod_id:
        if message.from_user.id == izvrat:
            allow = 1
            continue

    if allow == 0:
        if gender != "0" and gender != "1" and gender != "2":
            if "–º—É–∂" in message.text.lower():

                set_gender(user[0], 1)
                msg = await message.reply("<b> ‚úÖ –ü–æ–ª —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω!</b>")
                await as_del_msg(message.chat.id, msg.message_id, time_del)
                return
            elif "–∂–µ–Ω" in message.text.lower(): 

                set_gender(user[0], 2)
                msg = await message.reply("<b> ‚úÖ –ü–æ–ª —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω!</b>")
                await as_del_msg(message.chat.id, msg.message_id, time_del)
                return
            else:    
                msg = await message.reply("<b>‚ùå –£–∫–∞–∂–∏—Ç–µ –≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ!</b>\n–ü—Ä–∏–º–µ—Ä: +–ø–æ–ª 1\n0 - [-]; 1 - –ü–∞—Ä–µ–Ω—å; 2 - –î–µ–≤—É—à–∫–∞")
                await as_del_msg(message.chat.id, msg.message_id, time_del)
                return
        else:
            users = message.from_user
            set_gender(users.id, gender)
            msg = await message.reply("<b> ‚úÖ –ü–æ–ª —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω!</b>")
            await as_del_msg(message.chat.id, msg.message_id, time_del)
            return
    if allow == 1:
        if gender != "0" and gender != "1" and gender != "2" and gender != "3" and gender != "4":
            if "–º—É–∂" in message.text.lower():
                set_gender(user[0], 1)
                msg = await message.reply("<b> ‚úÖ –ü–æ–ª —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω!</b>")
                await as_del_msg(message.chat.id, msg.message_id, time_del)
                return
            elif "–∂–µ–Ω" in message.text.lower(): 
                set_gender(user[0], 2)
                msg = await message.reply("<b> ‚úÖ –ü–æ–ª —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω!</b>")
                await as_del_msg(message.chat.id, msg.message_id, time_del)
                return
            elif "–∏–Ω–æ" in message.text.lower(): 
                set_gender(user[0], 3)
                msg = await message.reply("<b> ‚úÖ –ü–æ–ª —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω!</b>")
                await as_del_msg(message.chat.id, msg.message_id, time_del)
                return
            elif "–∫–æ—Ç" in message.text.lower() or "—á–µ—à–∏—Ä" in message.text.lower(): 
                set_gender(user[0], 4)
                msg = await message.reply("<b> ‚úÖ –ü–æ–ª —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω!</b>")
                await as_del_msg(message.chat.id, msg.message_id, time_del)
                return
            else:    
                msg = await message.reply("<b>‚ùå –£–∫–∞–∂–∏—Ç–µ –≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ!</b>\n–ü—Ä–∏–º–µ—Ä: +–ø–æ–ª 1\n0 - [-]; 1 - –ü–∞—Ä–µ–Ω—å; 2 - –î–µ–≤—É—à–∫–∞")
                await as_del_msg(message.chat.id, msg.message_id, time_del)
                return

        else:
            users = message.from_user
            set_gender(users.id, gender)
            if int(gender) == 3 or int(gender) == 4:
                set_specie(users.id, "–ù–µ–æ–ø—Ä–µ–¥–µ–ª–∏–º–æ")
                msg = await message.reply("<b> ‚úÖ –í–∏–¥ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω!</b>")
                await as_del_msg(message.chat.id, msg.message_id, time_del)
            msg = await message.reply("<b> ‚úÖ –ü–æ–ª —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω!</b>")
            await as_del_msg(message.chat.id, msg.message_id, time_del)
            return


# –¢–µ–∫—É—â–∏–µ –º—É—Ç, —Ä–µ–ø–∞ –∏ —à–∞–Ω—Å –∞–Ω—Ç–∏–º–∞—Ç–∞
@dp.message_handler(commands=['–∞–Ω—Ç–∏–º–∞—Ç',], commands_prefix='!?./')
async def get_antimat(message: types.Message):
    if message.chat.type == 'private':
        return
    warner = get_warner(message.chat.id, message.from_user.id)
    if warner == None:
        warner = [message.chat.id, message.from_user.id, 0, 0, 0]
    if warner[4] != 0:
        return
    
    chats = message.chat.id
    chat = get_chat(chats)
    if check_chat(message.chat.id):
        create_chat(message.chat.id)

        chat = get_chat(chats)
        msg = await message.reply(f"üé≤ –®–∞–Ω—Å –∞–Ω—Ç–∏–º–∞—Ç–∞ - {str(chat[1])} –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤.\n‚è≥ –ú—É—Ç –∞–Ω—Ç–∏–º–∞—Ç–∞ - {str(chat[2])} —Å–µ–∫—É–Ω–¥.\nüëë –†–µ–ø—É—Ç–∞—Ü–∏—è –∞–Ω—Ç–∏–º–∞—Ç–∞ - [{str(chat[7]).replace('1', '–í–∫–ª—é—á–µ–Ω–æ').replace('0', '–í—ã–∫–ª—é—á–µ–Ω–æ')}].")
        await as_del_msg(message.chat.id, msg.message_id, time_del)
        return
    else:
        msg = await message.reply(f"üé≤ –®–∞–Ω—Å –∞–Ω—Ç–∏–º–∞—Ç–∞ - {str(chat[1])} –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤.\n‚è≥ –ú—É—Ç –∞–Ω—Ç–∏–º–∞—Ç–∞ - {str(chat[2])} —Å–µ–∫—É–Ω–¥.\nüëë –†–µ–ø—É—Ç–∞—Ü–∏—è –∞–Ω—Ç–∏–º–∞—Ç–∞ - [{str(chat[7]).replace('1', '–í–∫–ª—é—á–µ–Ω–æ').replace('0', '–í—ã–∫–ª—é—á–µ–Ω–æ')}].")
        await as_del_msg(message.chat.id, msg.message_id, time_del)



# –£–ó–ù–ê–¢–¨ –ü–†–ò–í–ï–¢–°–¢–í–ò–ï
@dp.message_handler(commands=['–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ',], commands_prefix='!?./')
async def get_welcome(message: types.Message):
    if message.chat.type == 'private':
        return
    
    warner = get_warner(message.chat.id, message.from_user.id)
    if warner == None:
        warner = [message.chat.id, message.from_user.id, 0, 0, 0]
    if warner[4] != 0:
        return
    
    chats = message.chat.id
    chat = get_chat(chats)
    if check_chat(message.chat.id):
        create_chat(message.chat.id)

        chat = get_chat(chats)

    msg = await message.reply(f"üëã –¢–µ–∫—É—â–µ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ: \n{chat[5]}[–ù–∏–∫–Ω–µ–π–º]{chat[6]}", parse_mode='html')
    await as_del_msg(message.chat.id, msg.message_id, time_del)



#–£–∑–Ω–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–ø–∞–º–ª–∏–º–∏—Ç–æ–≤
@dp.message_handler(commands=["—Å–ø–∞–º–ª–∏–º–∏—Ç—ã"], commands_prefix="/!.")
async def secmat_handler(message: types.Message):
    if message.chat.type == 'private':
        return

    warner = get_warner(message.chat.id, message.from_user.id)
    if warner == None:
        warner = [message.chat.id, message.from_user.id, 0, 0, 0]
    if warner[4] != 0:
        return
    
    chats = message.chat.id
    chat = get_chat(chats)
    if check_chat(message.chat.id):
            create_chat(message.chat.id)
            chat = get_chat(chats)
            
    msg = await message.reply(f"‚õîÔ∏è –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å —Å–ø–∞–º-–ª–∏–º–∏—Ç–æ–≤ –≤ —á–∞—Ç–µ:\
                        \n –ü—Ä–µ–¥–µ–ª —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π ‚Äî {chat[9]} —à—Ç. –ø–æ–¥—Ä—è–¥\
                        \n –ü—Ä–µ–¥–µ–ª –≤–∏–¥–µ–æ-—Å–æ–æ–±—â–µ–Ω–∏–π ‚Äî {chat[10]} —à—Ç. –ø–æ–¥—Ä—è–¥\
                        \n –ü—Ä–µ–¥–µ–ª GIF-—Å–æ–æ–±—â–µ–Ω–∏–π ‚Äî {chat[11]} —à—Ç. –ø–æ–¥—Ä—è–¥\
                        \n –ü—Ä–µ–¥–µ–ª —Ñ–æ—Ç–æ-—Å–æ–æ–±—â–µ–Ω–∏–π ‚Äî {chat[8]} —à—Ç. –ø–æ–¥—Ä—è–¥\
                        \n –ü—Ä–µ–¥–µ–ª –¥–ª—è —Å—Ç–∏–∫–µ—Ä–æ–≤ ‚Äî {chat[12]} —à—Ç. –ø–æ–¥—Ä—è–¥\
                        \n")
    await as_del_msg(message.chat.id, msg.message_id, time_del)
    return
    
@dp.message_handler(commands=["–≤–æ–∑—Ä–∞—Å—Ç", "–æ–∑—Ä–∞—Å—Ç"], commands_prefix="+–≤–í")
async def gender_handler(message: types.Message):
    if message.chat.type != 'private':
        warner = get_warner(message.chat.id, message.from_user.id)
        if warner == None:
            warner = [message.chat.id, message.from_user.id, 0, 0, 0]
        if warner[4] != 0:
            return
    
    
    command = message.text.split()[0]
    if "+" not in command:
        if len(message.text.split()) > 1:
            return

    age = message.text.replace(f"{command} ", "").replace(f"{command}", "")
    raises = [""]
    users = message.from_user
    user = create_user(message.from_user.id, message.from_user.username, message.from_user.first_name)
    

    if age in raises or "+" not in command:
        age = user[6]
        msg = await message.reply(f"<b>–í–∞—à –≤–æ–∑—Ä–∞—Å—Ç —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç {age} {years_letter(age)}!</b>")
        await as_del_msg(message.chat.id, msg.message_id, time_del)
        return

    try:
        age = int(age)
        if age >= 0:
            set_age(users.id, age)
            msg = await message.reply("<b> ‚úÖ –í–∞—à –≤–æ–∑—Ä–∞—Å—Ç —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω!</b>")
            await as_del_msg(message.chat.id, msg.message_id, time_del)
        else:
            msg = await message.reply("<b> –í—ã –∏–∑ –±—É–¥—É—â–µ–≥–æ?</b>")
            await as_del_msg(message.chat.id, msg.message_id, time_del)
    
    except:
        try:
            age = age.split()[0]
            try:
                age = int(age)
                if age >= 0:
                    set_age(users.id, age)
                    msg = await message.reply("<b> ‚úÖ –í–∞—à –≤–æ–∑—Ä–∞—Å—Ç —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω!</b>")
                    await as_del_msg(message.chat.id, msg.message_id, time_del)
                else:
                    msg = await message.reply("<b> –í—ã –∏–∑ –±—É–¥—É—â–µ–≥–æ?</b>")
                    await as_del_msg(message.chat.id, msg.message_id, time_del)
            
            except:
                msg = await message.reply("<b>‚ùå –£–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ!</b>")
                await as_del_msg(message.chat.id, msg.message_id, time_del)
                return
        except:
            try:
                age = int(age)
                if age >= 0:
                    set_age(users.id, age)
                    msg = await message.reply("<b> ‚úÖ –í–∞—à –≤–æ–∑—Ä–∞—Å—Ç —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω!</b>")
                    await as_del_msg(message.chat.id, msg.message_id, time_del)
                else:
                    msg = await message.reply("<b> –í—ã –∏–∑ –±—É–¥—É—â–µ–≥–æ?</b>")
                    await as_del_msg(message.chat.id, msg.message_id, time_del)
            
            except:
                msg = await message.reply("<b>–í—ã —Å—Ç–∞—Ä—à–µ –≤—Å–µ–ª–µ–Ω–Ω–æ–π?</b>")
                await as_del_msg(message.chat.id, msg.message_id, time_del)
                return