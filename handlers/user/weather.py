import aiohttp
import random

from loader import dp, bot
from aiogram import types
from datetime import datetime
from ..f_lib.other import as_del_msg
from settings import time_del, kuzya_news_link
from utils.db.db_utils_warning import *


async def get_weather(city):
    code_to_smile = { 
        "Clear": "–Ø—Å–Ω–æ \U00002600", 
        "Clouds": "–û–±–ª–∞—á–Ω–æ \U00002601", 
        "Rain": "–î–æ–∂–¥—å \U00002614", 
        "Drizzle": "–î–æ–∂–¥—å \U00002614", 
        "Thunderstorm": "–ì—Ä–æ–∑–∞ \U000026A1", 
        "Snow": "–°–Ω–µ–≥ \U0001F328", 
        "Mist": "–¢—É–º–∞–Ω \U0001F32B" 
    }
        
    async with aiohttp.ClientSession() as session:
        async with session.get( 
                f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid=4d9c68ba051733b61d30fa2406658670&units=metric&lang=ru") as response:
            data = await response.json()
            
            weather_status = data["weather"][0]["main"]
        
            if weather_status in code_to_smile:
                wd = code_to_smile[weather_status]
            else:
                wd = "–ü–æ—Å–º–æ—Ç—Ä–∏ –≤ –æ–∫–Ω–æ, –Ω–µ –ø–æ–π–º—É —á—Ç–æ —Ç–∞–º –∑–∞ –ø–æ–≥–æ–¥–∞!"
            
            vis = data['visibility']
            vis = round((vis / 1000), 1)
            press = data['main']['pressure'] * 0.750064
            text = (
                f"üèôÔ∏è <b>–ì–æ—Ä–æ–¥</b>: <b>{data['name']}</b>\n\n"
                f"üîç <b>–°—Ç–∞—Ç—É—Å</b> - <em>{wd}</em>\n"
                f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: <code>{data['main']['temp']}</code>\n"
                f"ü§î Ô∏è<b>–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫</b>: <code>{data['main']['feels_like']} ¬∞C</code>\n\n"
                f"‚è≤Ô∏è <b>–î–∞–≤–ª–µ–Ω–∏–µ</b>: <code>{press:.2f} –º–º.—Ä—Ç.—Å—Ç</code>\n"
                f"üíß <b>–í–ª–∞–∂–Ω–æ—Å—Ç—å</b>: <code>{data['main']['humidity']}%</code>\n"
                f"üí® <b>–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞</b>: <code>{data['wind']['speed']} –º/—Å</code>\n"
                f"‚òÅÔ∏è <b>–û–±–ª–∞—á–Ω–æ—Å—Ç—å</b>: <code>{data['clouds']['all']}%</code>\n\n"
                f"üî≠ <b>–í–∏–¥–∏–º–æ—Å—Ç—å</b>: <code>{vis} –∫–º.</code>\n\n"
                f"üåá –í–æ—Å—Ö–æ–¥ —Å–æ–ª–Ω—Ü–∞: <b>{datetime.fromtimestamp(data['sys']['sunrise'])}</b>\n"
                f"üåÖ –ó–∞–∫–∞—Ç —Å–æ–ª–Ω—Ü–∞: <b>{datetime.fromtimestamp(data['sys']['sunset'])}</b>\n\n"
                f"–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–Ω—è: <b>{datetime.fromtimestamp(data['sys']['sunset']) - datetime.fromtimestamp(data['sys']['sunrise'])}</b>\n"
                )

            if random.choice([True, False]):
                text += f"\n<a href='{kuzya_news_link}'>üóû –ö–∞–Ω–∞–ª —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏</a>"
            return text



@dp.message_handler(commands=['–ø–æ–≥–æ–¥–∞', 'w', 'weather', '–ø–∞–≥–æ–¥–∞'], commands_prefix="/!.")
async def send_weather(message):
    if message.chat.type != 'private':
        warner = get_warner(message.chat.id, message.from_user.id)
        if warner == None:
            warner = [message.chat.id, message.from_user.id, 0, 0, 0]
        if warner[4] != 0:
            return
    
    try:
        command = message.text.split()[0]
        city = message.text.replace(f'{command} ', '')
        
        if city == command:
            msg = await message.reply("<b>‚ùå –£–∫–∞–∂–∏—Ç–µ –∑–∞–ø—Ä–æ—Å!</b>")
            await as_del_msg(message.chat.id, msg.message_id, 30)
            await as_del_msg(message.chat.id, message.message_id, 30)
            return
        
        text = await get_weather(city)

        await bot.send_chat_action(message.chat.id, types.ChatActions.TYPING)
        msg = await bot.send_message(message.chat.id, text, parse_mode='HTML', disable_web_page_preview=True)
    except:
        msg = await message.reply("‚òπ Ô∏è–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ç–∞–∫–æ–π –≥–æ—Ä–æ–¥.\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        await as_del_msg(message.chat.id, msg.message_id, 30)
        await as_del_msg(message.chat.id, message.message_id, 30)
        return
    
    await as_del_msg(message.chat.id, msg.message_id, time_del)
    await as_del_msg(message.chat.id, message.message_id, time_del)
